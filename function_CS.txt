

\main.cs (16 hits)
	Line 32: function createCanvas(%windowTitle)
	Line 69:    function isActivePackage(%package)
	Line 82:    function activatePackage(%this)
	Line 99:    function deactivatePackage(%this)
	Line 144:    function listPackages()
	Line 166: function isScriptFile(%path)

	Line 205: function Torque::onStart(%this)
	Line 210: function onExit()
	Line 216: function Torque::parseArgs(%this)
	Line 222: function compileFiles(%pattern)
	Line 266:    function onExit()
	Line 272: function Torque::displayHelp(%this)
	Line 312: function Torque::loadDir(%this, %dir)
	Line 324: function Torque::loadDirs(%this, %dirPath)


\scripts\client\audio.cs (18 hits)
	Line 109: function sfxStartup()
	Line 165: function sfxInit()
	Line 212: function sfxShutdown()
	Line 231: function sfxCompareProvider( %providerA, %providerB )
	Line 269: function sfxAutodetect()
	Line 345: function sfxOldChannelToGroup( %channel )
	Line 350: function sfxGroupToOldChannel( %group )
	Line 362: function sfxSetMasterVolume( %volume )
	Line 367: function sfxGetMasterVolume( %volume )
	Line 372: function sfxStopAll( %channel )
	Line 385: function sfxGetChannelVolume( %channel )
	Line 392: function sfxSetChannelVolume( %channel, %volume )
	Line 412: function sfxPause( %channels, %pauseSet )
	Line 440: function sfxResume( %pauseSet )
	Line 465: function audioLooper::playTrack(%this, %trackName)
	Line 471: function audioLooper::stop(%this)
	Line 477: function clientCmdPlayMusic(%trackname)
	Line 486: function clientCmdStopMusic()
\scripts\client\audioStates.cs (6 hits)
	Line 27: function sfxGetActiveStateInGroup( %group )
	Line 53: function SFXState::onActivate( %this )
	Line 59: function SFXState::onDeactivate( %this )
	Line 71: function AudioStateExclusive::onActivate( %this )
	Line 114: function sfxGetLocation()
	Line 155: function sfxGetMood()
\scripts\client\callbacks.cs (19 hits)
	Line 13: function SyncAmmoHud(%msgType, %msgString, %weapon, %slot, %ammo, %amountInClips, %a5, %a6)
	Line 31: function SyncSpecialHud(%msgType, %msgString, %a1, %a2, %a3, %a4, %a5, %a6)
	Line 39: function SyncGrenadeHud(%msgType, %msgString, %a1, %a2, %a3, %a4, %a5, %a6)
	Line 60: function SyncSystemClock(%msgType, %msgString, %timeLeft, %reverse, %pause)
	Line 81: function clientDeploySensorRed()
	Line 88: function clientDeploySensorGrn()
	Line 95: function clientDeploySensorOff()
	Line 103: function SetVehicleCount(%msgType, %msgString, %vehicle, %left)
	Line 115: function handleGameInfoMessage(%msgType, %msgString, %map, %game, %gameName, %server)
	Line 138: function handleTeamListMessage( %msgType, %msgString, %teamCount, %teamList )
	Line 153: function handlePlayerPopupMessage(%msgType, %msgString, %key, %voteName, %voteActionMsg, %voteText, %popupEntryId)
	Line 164: function handleVoteItemMessage(%msgType, %msgString, %key, %voteName, %voteText, %sort)
	Line 179: function handlePlayerMuted(%msgType, %msgString, %name, %client, %mute)
	Line 195: function initVote(%msgType, %msgString)
	Line 206: function handleToggleVoteHud(%msgType, %msgString, %numClients, %passPercent, %toggle)
	Line 232: function closeVoteHud(%msgType, %msgString, %a1)
	Line 237: function addYesVote(%msgType, %msgString)
	Line 245: function addNoVote(%msgType, %msgString)
	Line 253: function clearVoteHud(%msgType, %msgString)
\scripts\client\canvas.cs (7 hits)
	Line 29: function configureCanvas()
	Line 116: function initializeCanvas()
	Line 138: function resetCanvas()
	Line 148: function GuiCanvas::onLoseFocus(%this)
	Line 156: function GuiCanvas::attemptFullscreenToggle(%this)
	Line 180: function EditorIsActive()
	Line 185: function GuiEditorIsActive()
\scripts\client\centerPrint.cs (6 hits)
	Line 32: function clientCmdCenterPrint( %message, %time, %size )
	Line 52: function clientCmdBottomPrint( %message, %time, %size )
	Line 71: function BottomPrintText::onResize(%this, %width, %height)
	Line 76: function CenterPrintText::onResize(%this, %width, %height)
	Line 83: function clientCmdClearCenterPrint()
	Line 90: function clientCmdClearBottomPrint()

\scripts\client\client.cs (8 hits)
	Line 38: function resetClientDefaults()
	Line 51: function GameConnection::prepDemoRecord(%this)
	Line 62: function GameConnection::prepDemoPlayback(%this)
	Line 69: /// A helper function which will return the ghosted client object
	Line 71: function serverToClientObject( %serverObject )
	Line 87: function netSimulateLag( %msDelay, %packetLossPercent )
\scripts\client\commands.cs (8 hits)
	Line 24: function clientCmdSyncEditorGui()
	Line 34: function clientCmdGameStart(%seq)
	Line 39: function clientCmdGameEnd(%seq)
	Line 69: function clientCmdSetDamageDirection(%direction)
	Line 87: function clientCmdSetHudMode(%mode)
	Line 164: function clientCmdHideReticle()
	Line 172: function clientCmdShowReticle()
	Line 177: function clientCmdDoZoomReticle(%val)
\scripts\client\core.cs (8 hits)
	Line 27: function Torque::initializeCore(%this)
	Line 111: function shutdownCore()
	Line 119: function handleEscape()
	Line 154: function loadCoreMaterials()
	Line 178: function reloadCoreMaterials()
	Line 188: function loadMaterials()
	Line 234: function reloadMaterials()
	Line 243: function cropXDecimals(%num, %count)
\scripts\client\cursor.cs (7 hits)
	Line 27: function showCursor()
	Line 34: function hideCursor()
	Line 56: function GuiCanvas::checkCursor(%this)
	Line 76: function GuiCanvas::setContent(%this, %ctrl)
	Line 82: function GuiCanvas::pushDialog(%this, %ctrl, %layer, %center)
	Line 88: function GuiCanvas::popDialog(%this, %ctrl)
	Line 94: function GuiCanvas::popLayer(%this, %layer)
\scripts\client\default.bind.cs (97 hits)
	Line 45: function ActionMap::copyBind( %this, %otherMap, %command )
	Line 66: function ActionMap::blockBind( %this, %otherMap, %command )
	Line 80: function ActionMap::clearBind(%this, %command)
	Line 104: function escapeFromGame()
	Line 114: function showMetrics(%val)
	Line 121: function doProfile(%val)
	Line 144: function showPlayerList(%val)
	Line 150: function showScoreBoard(%val)
	Line 156: function toggleArmoryDlg( %val )
	Line 162: function toggleVehicleHud( %val )
	Line 173: function hideHUDs(%val)
	Line 179: function doScreenShotHudless(%val)
	Line 197: function setSpeed(%speed)
	Line 203: function moveleft(%val)
	Line 208: function moveright(%val)
	Line 213: function moveforward(%val)
	Line 218: function movebackward(%val)
	Line 223: function moveup(%val)
	Line 231: function movedown(%val)
	Line 239: function turnLeft( %val )
	Line 244: function turnRight( %val )
	Line 249: function panUp( %val )
	Line 254: function panDown( %val )
	Line 259: function getMouseAdjustAmount(%val)
	Line 265: function getGamepadAdjustAmount(%val)
	Line 271: function yaw(%val)
	Line 284: function pitch(%val)
	Line 297: function gamePadMoveX( %val )
	Line 302: function gamePadMoveY( %val )
	Line 307: function gamepadYaw(%val)
	Line 329: function gamepadPitch(%val)
	Line 355: function mouseFire(%val)
	Line 360: function mouseJet(%val)
	Line 365: function jump(%val)
	Line 370: function doCrouch(%val)
	Line 375: function doProne(%val)
	Line 380: function doSprint(%val)
	Line 385: function throwGrenade( %val )
	Line 392: function throwFlag( %val )
	Line 401: function gamepadFire(%val)
	Line 415: function gamepadAltTrigger(%val)
	Line 441: function toggleZoomFOV(%val)
	Line 459: function resetCurrentFOV()
	Line 464: function turnOffZoom()
	Line 477: function toggleZoom(%val)
	Line 508: function toggleIronSights( %val )
	Line 538: function toggleFreeLook( %val )
	Line 546: function toggleFirstPerson(%val)
	Line 554: function toggleCamera(%val)
	Line 564: function celebrationWave(%val)
	Line 570: function celebrationSalute(%val)
	Line 576: function doSuicide(%val)
	Line 586: function triggerSpecial(%val)
	Line 591: function tossSpecial( %val )
	Line 597: function tossGrenade( %val )
	Line 603: function tossAmmo( %val )
	Line 613: function pageMessageHudUp( %val )
	Line 619: function pageMessageHudDown( %val )
	Line 625: function resizeMessageHud( %val )
	Line 635: function melee( %val )
	Line 641: function reloadWeapon( %val )
	Line 647: function throwWeapon( %val )
	Line 653: function cycleWeaponAxis( %val )
	Line 661: function nextWeapon( %val )
	Line 667: function prevWeapon( %val )
	Line 673: function cycleNextWeaponOnly( %val )
	Line 679: function useFirstWeaponSlot( %val )
	Line 685: function useSecondWeaponSlot( %val )
	Line 691: function useThirdWeaponSlot( %val )
	Line 697: function useFourthWeaponSlot( %val )
	Line 703: function useFifthWeaponSlot( %val )
	Line 709: function useSixthWeaponSlot( %val )
	Line 715: function useSeventhWeaponSlot( %val )
	Line 721: function useEighthWeaponSlot( %val )
	Line 730: function useVehicleWeaponOne(%val)
	Line 736: function useVehicleWeaponTwo(%val)
	Line 742: function useVehicleWeaponThree(%val)
	Line 748: function nextVehicleWeapon(%val)
	Line 754: function prevVehicleWeapon(%val)
	Line 760: function cycleVehicleWeapon( %val )
	Line 768: function cycleNextVehicleWeaponOnly( %val )
	Line 778: function toggleDemoRecording(%val)
	Line 793: function startRecordingDemo( %val )
	Line 799: function stopRecordingDemo( %val )
	Line 805: function recordMovie(%val)
	Line 824: function dropCameraAtPlayer(%val)
	Line 830: function dropPlayerAtCamera(%val)
	Line 836: function bringUpOptions(%val)
	Line 846: function voteYes(%val)
	Line 852: function voteNo(%val)
	Line 862: function cycleLoadoutNext(%val) { if(%val) CycleLoadout(1); }
	Line 863: function cycleLoadoutPrev(%val) { if(%val) CycleLoadout(2); }
	Line 865: function cycleLoadout(%val)
	Line 888: function autoMountVehicle(%val)
	Line 894: function createVehicle(%val)
	Line 1044: function brake(%val)
	Line 1100: function Torque::updateKeyMaps(%this)
\scripts\client\defaults.cs (5 hits)
	Line 421: function TextureQualityGroup::onApply( %this, %level )
	Line 475: function LightingQualityGroup::onApply( %this, %level )
	Line 592: function EffectQualityGroup::onApply( %this, %level )
	Line 625: function GraphicsQualityAutodetect()
	Line 636: function GraphicsQualityAutodetect_Apply( %shaderVer, %intel, %videoMem )
\scripts\client\devHelpers.cs (2 hits)
	Line 24: function dbgTorsion()
	Line 32: function mvReset()
\scripts\client\helperfuncs.cs (18 hits)
	Line 23: function validateDatablockName(%name)
	Line 61: function wordPos(%text, %word, %start)
	Line 79: function fieldPos(%text, %field, %start)
	Line 97: function loadFileText(%file)
	Line 117: function setValueSafe(%dest, %val)
	Line 130: function shareValueSafe(%source, %dest)
	Line 135: function shareValueSafeDelay(%source, %dest, %delayMs)
	Line 148: function AggregateControl::setValue(%this, %val, %child)
	Line 163: function AggregateControl::getValue(%this)
	Line 179: function AggregateControl::updateFromChild(%this, %child)
	Line 206: function AggregateControl::onAction(%this) 
	Line 211: function AggregateControl::callMethod(%this, %method, %args)
	Line 222: // A function used in order to easily parse the MissionGroup for classes . I'm pretty 
	Line 223: // sure at this point the function can be easily modified to search the any group as well.
	Line 224: function parseMissionGroup( %className, %childGroup )
	Line 245: function parseMissionGroupForIds( %className, %childGroup )
	Line 267: function QuickEditDropDownTextEditCtrl::onRenameItem( %this )
	Line 271: function QuickEditDropDownTextEditCtrl::updateFromChild( %this, %ctrl )
\scripts\client\imposter.cs (1 hit)
	Line 24: function imposterMetricsCallback()
\scripts\client\init.cs (3 hits)
	Line 52: function Torque::initClient(%this)
	Line 205: function Torque::loadMainMenu(%this)
	Line 235: function Torque::loadLoadingGui(%this)
\scripts\client\lighting\advanced\init.cs (3 hits)
	Line 47: function onActivateAdvancedLM()
	Line 63: function onDeactivateAdvancedLM()
	Line 69: function setAdvancedLighting()
\scripts\client\lighting\advanced\lightViz.cs (8 hits)
	Line 75: function AL_DepthVisualize::onEnabled( %this )
	Line 110: function AL_NormalsVisualize::onEnabled( %this )
	Line 146: function AL_LightColorVisualize::onEnabled( %this )
	Line 181: function AL_LightSpecularVisualize::onEnabled( %this )
	Line 194: function toggleDepthViz( %enable )
	Line 208: function toggleNormalsViz( %enable )
	Line 222: function toggleLightColorViz( %enable )
	Line 236: function toggleLightSpecularViz( %enable )
\scripts\client\lighting\advanced\shadowViz.cs (5 hits)
	Line 58: function toggleShadowViz()
	Line 73: function _setShadowVizLight( %light, %force )
	Line 98: function showShadowVizForLight( %light )
	Line 108: function lockShadowViz()
	Line 113: function unlockShadowViz()
\scripts\client\lighting\basic\init.cs (3 hits)
	Line 64: function onActivateBasicLM()
	Line 83: function onDeactivateBasicLM()
	Line 89: function setBasicLighting()
\scripts\client\lighting.cs (3 hits)
	Line 26: function initLightingSystems()
	Line 77: function onLightManagerActivate( %lmName )
	Line 91: function onLightManagerDeactivate( %lmName )
\scripts\client\message.cs (7 hits)
	Line 28: // This function is for chat messages only; it is invoked on the client when
	Line 34: function clientCmdChatMessage(%sender, %voice, %pitch, %msgString, %a1, %a2, %a3, %a4, %a5, %a6, %a7, %a8, %a9, %a10)
	Line 46: // function below.
	Line 51: function clientCmdServerMessage(%msgType, %msgString, %a1, %a2, %a3, %a4, %a5, %a6, %a7, %a8, %a9, %a10)
	Line 72: function addMessageCallback(%msgType, %func)
	Line 92: function onServerMessage(%a, %b, %c, %d, %e, %f, %g, %h, %i)
	Line 106: function defaultMessageCallback(%msgType, %msgString, %a1, %a2, %a3, %a4, %a5, %a6, %a7, %a8, %a9, %a10)
\scripts\client\messageHud.cs (8 hits)
	Line 10: function MessageHud::open(%this)
	Line 50: function MessageHud::close(%this)
	Line 69: function MessageHud::toggleState(%this)
	Line 79: function MessageHud_Edit::onEscape(%this)
	Line 86: function MessageHud_Edit::eval(%this)
	Line 115: function toggleMessageHud(%make)
	Line 125: function teamMessageHud(%make)
	Line 135: function fireTeamMessageHud(%make)
\scripts\client\metrics.cs (24 hits)
	Line 27: // just add a function with a name in the form 
	Line 31: function fpsMetricsCallback()
	Line 40: function gfxMetricsCallback()
	Line 49: function terrainMetricsCallback()
	Line 57: function netMetricsCallback()
	Line 65: function groundCoverMetricsCallback()
	Line 74: function forestMetricsCallback()
	Line 84: function sfxMetricsCallback() 
	Line 100: function sfxSourcesMetricsCallback() 
	Line 105: function sfxStatesMetricsCallback()
	Line 110: function timeMetricsCallback()
	Line 117: function reflectMetricsCallback()
	Line 134: function decalMetricsCallback()
	Line 142: function renderMetricsCallback()
	Line 158: function shadowMetricsCallback()
	Line 170: function basicShadowMetricsCallback()
	Line 178: function lightMetricsCallback()
	Line 185: function particleMetricsCallback()
	Line 190: function partMetricsCallback()
	Line 197: function audioMetricsCallback()
	Line 203: function videoMetricsCallback()
	Line 209: // must have a corresponding '<name>MetricsCallback()' function defined
	Line 211: // of each function are stringed together.
	Line 215: function metrics( %expr )
\scripts\client\mission.cs (6 hits)
	Line 32: function clientStartMission()
	Line 53: function clientEndMission()
	Line 79: function clientCmdMissionStart(%seq)
	Line 85: function clientCmdMissionEnd( %seq )
	Line 96: function expandMissionFileName( %missionFile )
	Line 126: function loadLevel( %missionNameOrFile )
\scripts\client\missionDownload.cs (10 hits)
	Line 38: function clientCmdMissionStartPhase1(%seq, %missionName, %musicTrack)
	Line 47: function onDataBlockObjectReceived(%index, %total)
	Line 56: function clientCmdMissionStartPhase2(%seq, %missionFile)
	Line 64: function onGhostAlwaysStarted(%ghostCount)
	Line 70: function onGhostAlwaysObjectReceived()
	Line 80: function clientCmdMissionStartPhase3(%seq, %missionFile)
	Line 94:    // The sceneLightingComplete function will complete the handshake 
	Line 107: function updateLightingProgress()
	Line 114: function sceneLightingComplete()
	Line 128: function connect(%server)
\scripts\client\oculusVR.cs (13 hits)
	Line 29: function oculusSensorMetricsCallback()
	Line 37: // Call this function from createCanvas() to have the Canvas attach itself
	Line 42: function pointCanvasToOculusVRDisplay()
	Line 49: // Call this function from GameConnection::initialControlSet() just before
	Line 59: function enableOculusVRDisplay(%gameConnection, %trueStereoRendering)
	Line 84: // Call this function when ever you wish to turn off the stereo rendering
	Line 86: function disableOculusVRDisplay(%gameConnection)
	Line 95: // Helper function to set the standard Rift control scheme.  You could place
	Line 96: // this function in GameConnection::initialControlSet() at the same time
	Line 98: function setStandardOculusVRControlScheme(%gameConnection)
	Line 115: // Helper function to set the resolution for the Rift.
	Line 120: function setVideoModeForOculusVRDisplay(%fullscreen)
	Line 130: function resetOculusVRSensors()
\scripts\client\onMissionDownload.cs (11 hits)
	Line 40: function onMissionDownloadPhase1(%missionName, %musicTrack)
	Line 85: function onPhase1Progress(%progress)
	Line 94: function onPhase1Complete()
	Line 107: function onMissionDownloadPhase2(%missionFile)
	Line 122: function onPhase2Progress(%progress)
	Line 131: function onPhase2Complete()
	Line 149: function onFileChunkReceived(%fileName, %ofs, %size)
	Line 162: function onMissionDownloadPhase3(%missionFile)
	Line 172: function onPhase3Progress(%progress)
	Line 181: function onPhase3Complete()
	Line 197: function onMissionDownloadComplete()
\scripts\client\persistenceManagerTest.cs (7 hits)
	Line 25: function runPManTest(%test)
	Line 57: function TestPManager::testFieldUpdates(%doNotSave)
	Line 103: function TestPManager::testObjectRename(%doNotSave)
	Line 123: function TestPManager::testNewObject(%doNotSave)
	Line 159: function TestPManager::testNewGroup(%doNotSave)
	Line 252: function TestPManager::testMoveObject(%doNotSave)
	Line 332: function TestPManager::testObjectRemove(%doNotSave)
\scripts\client\playerList.cs (16 hits)
	Line 20: function handleGetMyInfo(%msgType, %msgString, %clientName, %clientId)
	Line 26: function handleClientJoin(%msgType, %msgString, %clientName, %clientId, %guid, %isAI, %isAdmin, %isSuperAdmin, %team, %fireTeam, %ping, %pl)
	Line 68: function handleClientDrop(%msgType, %msgString, %clientName, %clientId)
	Line 80: function handleClientScoreChanged(%msgType, %msgString, %clientId, %score, %kills, %deaths, %suicides, %tks)
	Line 95: function handleClientTeamChanged(%msgType, %msgString, %clientId, %team, %teamName, %clientName)
	Line 106: function handleClientNameChanged( %msgType, %msgString, %oldName, %newName, %clientId )
	Line 118: function handleClientAdminChanged(%msgType, %msgString, %a1, %clientId, %clientName, %isSuperAdmin)
	Line 134: function handleClientAdminStripped(%msgType, %msgString, %clientId)
	Line 145: function PlayerListGui::updatePlayerInfo(%this, %player)
	Line 182: function PlayerListGui::clear(%this)
	Line 188: function PlayerListGui::zeroScores(%this)
	Line 210: function echoPlayerList()
	Line 219: function PlayerListGui::GetPlayerListUpdate(%this)
	Line 228: function handlePlayerListUpdate(%msgType, %msgString, %clientId, %ping, %pl)
	Line 234: function PlayerListGui::updateNetwork(%this, %clientId, %ping, %pl)
	Line 246: function isClientChatMuted(%client)
\scripts\client\postFx\chromaticLens.cs (1 hit)
	Line 72: function ChromaticLensPostFX::setShaderConsts( %this )
\scripts\client\postFx\dof.cs (13 hits)
	Line 101: function onSniperZoom()
	Line 113: function onSniperUnzoom()
	Line 135: function onMouseWheelUp()
	Line 142: function onMouseWheelDown()
	Line 151: function DOFPostEffect::setFocalDist( %this, %dist )
	Line 159: function DOFPostEffect::setAutoFocus( %this, %enabled )
	Line 167: function DOFPostEffect::setFocusParams( %this, %nearBlurMax, %farBlurMax, %minRange, %maxRange, %nearSlope, %farSlope )
	Line 399: function DOFPostEffect::onAdd( %this )
	Line 418: function DOFPostEffect::setLerpDist( %this, %d0, %d1, %d2 )
	Line 499: function DOFPostEffect::setShaderConsts( %this )
	Line 548: function DOFPostEffect::autoFocus( %this )
	Line 585: function reloadDOF()
	Line 593: function dofMetricsCallback()
\scripts\client\postFx\flash.cs (1 hit)
	Line 51: function FlashFx::setShaderConsts( %this )
\scripts\client\postFx\fog.cs (2 hits)
	Line 122: function UnderwaterFogPostFx::onEnabled( %this )
	Line 129: function UnderwaterFogPostFx::onDisabled( %this )
\scripts\client\postFx\GammaPostFX.cs (2 hits)
	Line 60: function GammaPostFX::preProcess( %this )
	Line 66: function GammaPostFX::setShaderConsts( %this )
\scripts\client\postFx\hdr.cs (7 hits)
	Line 223: function HDRPostFX::setShaderConsts( %this )
	Line 264: function HDRPostFX::preProcess( %this )
	Line 272: function HDRPostFX::onEnabled( %this )
	Line 311: function HDRPostFX::onDisabled( %this )
	Line 483: function LuminanceVisPostFX::setShaderConsts( %this )
	Line 506: function LuminanceVisPostFX::onEnabled( %this )
	Line 518: function LuminanceVisPostFX::onDisabled( %this )
\scripts\client\postFx\lightRay.cs (2 hits)
	Line 95: function LightRayPostFX::preProcess( %this )
	Line 100: function LightRayPostFX::setShaderConsts( %this )
\scripts\client\postFx\MLAA.cs (1 hit)
	Line 181: function MLAAFx::setShaderConsts(%this)
\scripts\client\postFx\MotionBlurFx.cs (1 hit)
	Line 50: function MotionBlurFX::setShaderConsts(%this)
\scripts\client\postFx\ovrBarrelDistortion.cs (1 hit)
	Line 161: function OVRBarrelDistortionMonoPostFX::setShaderConsts( %this )
\scripts\client\postFx\postFxManager.gui.cs (60 hits)
	Line 24: function postVerbose(%string)
	Line 32: function PostFXManager::onDialogPush( %this )
	Line 41: function ppOptionsEnable::onAction(%this)
	Line 58: function PostFXManager::getEnableResultFromControl(%this, %control)
	Line 74: function ppOptionsEnableSSAO::onAction(%this)
	Line 80: function ppOptionsEnableHDR::onAction(%this)
	Line 86: function ppOptionsEnableLightRays::onAction(%this)
	Line 92: function ppOptionsEnableDOF::onAction(%this)
	Line 98: function ppOptionsEnableVignette::onAction(%this)
	Line 104: function ppOptionsSavePreset::onClick(%this)
	Line 109: function ppOptionsLoadPreset::onClick(%this)
	Line 116: function ppOptionsSSAOQuality::onSelect( %this, %id, %text )
	Line 126: function ppOptionsSSAOOverallStrength::onMouseDragged(%this)
	Line 132: function ppOptionsSSAOBlurDepth::onMouseDragged(%this)
	Line 138: function ppOptionsSSAOBlurNormal::onMouseDragged(%this)
	Line 145: function ppOptionsSSAONearRadius::onMouseDragged(%this)
	Line 151: function ppOptionsSSAONearStrength::onMouseDragged(%this)
	Line 157: function ppOptionsSSAONearDepthMin::onMouseDragged(%this)
	Line 163: function ppOptionsSSAONearDepthMax::onMouseDragged(%this)
	Line 169: function ppOptionsSSAONearToleranceNormal::onMouseDragged(%this)
	Line 175: function ppOptionsSSAONearTolerancePower::onMouseDragged(%this)
	Line 182: function ppOptionsSSAOFarRadius::onMouseDragged(%this)
	Line 187: function ppOptionsSSAOFarStrength::onMouseDragged(%this)
	Line 192: function ppOptionsSSAOFarDepthMin::onMouseDragged(%this)
	Line 197: function ppOptionsSSAOFarDepthMax::onMouseDragged(%this)
	Line 202: function ppOptionsSSAOFarToleranceNormal::onMouseDragged(%this)
	Line 207: function ppOptionsSSAOFarTolerancePower::onMouseDragged(%this)
	Line 216: function ppOptionsHDRToneMappingAmount::onMouseDragged(%this)
	Line 223: function ppOptionsHDRKeyValue::onMouseDragged(%this)
	Line 229: function ppOptionsHDRMinLuminance::onMouseDragged(%this)
	Line 235: function ppOptionsHDRWhiteCutoff::onMouseDragged(%this)
	Line 241: function ppOptionsHDRBrightnessAdaptRate::onMouseDragged(%this)
	Line 248: function ppOptionsHDRBloomBlurBrightPassThreshold::onMouseDragged(%this)
	Line 254: function ppOptionsHDRBloomBlurMultiplier::onMouseDragged(%this)
	Line 260: function ppOptionsHDRBloomBlurMean::onMouseDragged(%this)
	Line 266: function ppOptionsHDRBloomBlurStdDev::onMouseDragged(%this)
	Line 272: function ppOptionsHDRBloom::onAction(%this)
	Line 277: function ppOptionsHDRToneMapping::onAction(%this)
	Line 282: function ppOptionsHDREffectsBlueShift::onAction(%this)
	Line 290: function ppOptionsHDREffectsBlueShiftColorBlend::onAction(%this)
	Line 296: function ppOptionsHDREffectsBlueShiftColorBaseColor::onAction(%this)
	Line 305: function ppOptionsLightRaysBrightScalar::onMouseDragged(%this)
	Line 311: function ppOptionsLightRaysSampleScalar::onMouseDragged(%this)
	Line 317: function ppOptionsLightRaysDensityScalar::onMouseDragged(%this)
	Line 323: function ppOptionsLightRaysWeightScalar::onMouseDragged(%this)
	Line 329: function ppOptionsLightRaysDecayScalar::onMouseDragged(%this)
	Line 336: function ppOptionsUpdateDOFSettings()
	Line 355: function ppOptionsDOFEnableDOF::onAction(%this)
	Line 362: function ppOptionsDOFEnableAutoFocus::onAction(%this)
	Line 369: function ppOptionsDOFFarBlurMinSlider::onMouseDragged(%this)
	Line 375: function ppOptionsDOFFarBlurMaxSlider::onMouseDragged(%this)
	Line 381: function ppOptionsDOFFocusRangeMinSlider::onMouseDragged(%this)
	Line 387: function ppOptionsDOFFocusRangeMaxSlider::onMouseDragged(%this)
	Line 393: function ppOptionsDOFBlurCurveNearSlider::onMouseDragged(%this)
	Line 399: function ppOptionsDOFBlurCurveFarSlider::onMouseDragged(%this)
	Line 405: function ppOptionsEnableHDRDebug::onAction(%this)
	Line 413: function ppOptionsUpdateVignetteSettings()
	Line 425: function ppOptionsVignetteEnableVignette::onAction(%this)
	Line 431: function ppColorCorrection_selectFile()
	Line 437: function ppColorCorrection_selectFileHandler( %filename )
\scripts\client\postFx\postFxManager.gui.settings.cs (16 hits)
	Line 25: function PostFXManager::settingsSetEnabled(%this, %bEnablePostFX)
	Line 75: function PostFXManager::settingsEffectSetEnabled(%this, %sName, %bEnable)
	Line 124: function PostFXManager::settingsRefreshSSAO(%this)
	Line 160: function PostFXManager::settingsRefreshHDR(%this)
	Line 183: function PostFXManager::settingsRefreshLightrays(%this)
	Line 196: function PostFXManager::settingsRefreshDOF(%this)
	Line 216: function PostFXManager::settingsRefreshVignette(%this)
	Line 223: function PostFXManager::settingsRefreshAll(%this)
	Line 246: function PostFXManager::settingsApplyFromPreset(%this)
	Line 322: function PostFXManager::settingsApplySSAO(%this)
	Line 347: function PostFXManager::settingsApplyHDR(%this)
	Line 366: function PostFXManager::settingsApplyLightRays(%this)
	Line 379: function PostFXManager::settingsApplyDOF(%this)
	Line 393: function PostFXManager::settingsApplyVignette(%this)
	Line 399: function PostFXManager::settingsApplyAll(%this, %sFrom)
	Line 426: function PostFXManager::settingsApplyDefaultPreset(%this)
\scripts\client\postFx\postFxManager.persistance.cs (4 hits)
	Line 36: function PostFXManager::loadPresetFile()
	Line 42: function PostFXManager::loadPresetHandler( %filename )
	Line 59: function PostFXManager::savePresetFile(%this)
	Line 66: function PostFXManager::savePresetHandler( %filename )
\scripts\client\postFx\ssao.cs (5 hits)
	Line 60: function SSAOPostFx::onAdd( %this )
	Line 66: function SSAOPostFx::preProcess( %this )
	Line 78: function SSAOPostFx::setShaderConsts( %this )
	Line 117: function SSAOPostFx::onEnabled( %this )
	Line 126: function SSAOPostFx::onDisabled( %this )
\scripts\client\postFx\vignette.cs (1 hit)
	Line 51: function VignettePostEffect::setShaderConsts(%this)
\scripts\client\postFx.cs (4 hits)
	Line 47: function initPostEffects()
	Line 68: function PostEffect::inspectVars( %this )
	Line 75: function PostEffect::viewDisassembly( %this )
	Line 92: function PostEffect::onEnabled( %this )
\scripts\client\renderManager.cs (1 hit)
	Line 23: function initRenderManager()
\scripts\client\screenshot.cs (8 hits)
	Line 27: function formatImageNumber(%number)
	Line 44: function formatSessionNumber(%number)
	Line 59: function makeMovie(%movieName, %fps, %encoder)
	Line 85: function stopMovie()
	Line 93: function doScreenShot( %val )
	Line 105: /// Internal function which generates unique filename
	Line 107: function _screenShot( %tiles, %overlap )
	Line 135: function tiledScreenShot( %tiles, %overlap )
\scripts\client\scriptDoc.cs (2 hits)
	Line 24: function writeOutFunctions()
	Line 32: function writeOutClasses()
\scripts\client\serverConnection.cs (12 hits)
	Line 32: function handleConnectionErrorMessage(%msgType, %msgString, %msgError)
	Line 45: function GameConnection::initialControlSet(%this)
	Line 60: function GameConnection::onControlObjectChange(%this)
	Line 70: function GameConnection::setLagIcon(%this, %state)
	Line 79: function GameConnection::onConnectionAccepted(%this)
	Line 86: function GameConnection::onConnectionError(%this, %msg)
	Line 95: function GameConnection::onConnectionTimedOut(%this)
	Line 102: function GameConnection::onConnectionDropped(%this, %msg)
	Line 113: function GameConnection::onConnectRequestRejected( %this, %msg )
	Line 147: function GameConnection::onConnectRequestTimedOut(%this)
	Line 157: function disconnect()
	Line 173: function Torque::disconnectedCleanup(%this)
\scripts\gui\adminDlg.cs (30 hits)
	Line 23: function AdminDlg::toggle(%this, %val)
	Line 31: function clientCmdToggleAdminDlg(%val)
	Line 36: function AdminDlg::onWake(%this)
	Line 108: function AdminDlg::onSleep(%this)
	Line 114: function AdminDlg::onOption(%this)
	Line 124: function PlayerListGuiList::onSelect(%this, %id, %text)
	Line 141: function PlayerListGuiList::onRightMouseDown(%this, %column, %row, %mousePos)
	Line 160: function PlayerAdminActionDlg::onWake(%this)
	Line 165: function LobbyPlayerActionDlg::onSleep(%this)
	Line 172: function PlayerPopupMenu::onSelect(%this, %id, %text)
	Line 239: function PlayerPopupMenu::onCancel(%this)
	Line 246: function ESC_ServerListPane::onWake(%this)
	Line 251: function ESC_VoteMenu::onSelect(%this, %id, %text)
	Line 255: function ESC_VoteMenu::onRightMouseDown(%this, %column, %row, %mousePos)
	Line 350: function ESC_VoteMenu::reset(%this)
	Line 358: function ESC_VoteMenu::fillVoteMenu(%this)
	Line 367: function ESC_VoteMenu::fillMissionTypeMenu(%this)
	Line 377: function ESC_VoteMenu::fillMissionMenu(%this, %type, %name)
	Line 388: function ESC_VoteMenu::fillTimeLimitMenu(%this)
	Line 398: function ESC_VoteMenu::fillFireTeamMenu(%this)
	Line 407: function ESC_VoteMenu::fillJoinFireTeamMenu(%this)
	Line 417: function ESC_VoteMenu::startVote(%this, %name, %val1, %val2, %val3, %val4, %playerVote)
	Line 430: function setPlayerVote(%vote)
	Line 435: function ClientCmdVoteSubmitted(%type)
	Line 445: function PrivateMessage(%clientId)
	Line 454: function ClientCmdFillCmdMenuDropdown(%text)
	Line 470: function ESC_CmdMenu::onSelect(%this, %id, %text)
	Line 480: function ESC_CmdInput::setField(%this)
	Line 489: function ESC_CmdInput::processEnter(%this)
	Line 494: function ESC_SendBtn::adminCommand(%this)
\scripts\gui\armoryHud.cs (33 hits)
	Line 23: function ArmoryDlg::configure(%this)
	Line 44: function clientCmdToggleArmory( %val )
	Line 56: function clientCmdOpenArmoryHud()
	Line 65: function clientCmdCloseArmoryHud()
	Line 71: function clientCmdClearArmoryHud(%line)
	Line 89: function clientCmdRemoveArmoryLine(%line)
	Line 106: function clientCmdSetArmoryLine(%line, %a0, %a1, %a2, %a3)
	Line 124: function GuiButtonCtrl::hudSetValue(%this, %text)
	Line 129: function GuiTextCtrl::hudSetValue(%this, %text)
	Line 134: function GuiMLTextCtrl::hudSetValue(%this, %text)
	Line 139: function GuiPopUpMenuCtrl::hudSetValue(%this, %text, %textOverFlow)
	Line 168: function makeEntry(%hud, %lineNum, %a0, %a1, %a2, %a3)
	Line 180: function ArmoryDlg::addLine( %this, %lineNum, %type, %count )
	Line 221: function Armory_Menu0::onSelect( %obj, %index, %text )
	Line 239: function Armory_Menu1::onSelect( %obj, %index, %text )
	Line 244: function Armory_Menu2::onSelect( %obj, %index, %text )
	Line 249: function Armory_Menu3::onSelect( %obj, %index, %text )
	Line 254: function Armory_Menu4::onSelect( %obj, %index, %text )
	Line 259: function Armory_Menu5::onSelect( %obj, %index, %text )
	Line 264: function Armory_Menu6::onSelect( %obj, %index, %text )
	Line 272: function setUpFavPrefs()
	Line 288: function ArmoryDlg::onWake(%this)
	Line 305: function ArmoryDlg::onSleep(%this)
	Line 328: function clientCmdInitLoadFavorite()
	Line 333: function LoadoutMenu::onSelect(%this, %id, %text)
	Line 343: function loadLoadout( %index, %echo )
	Line 363: function LoadoutInput::setField(%this)
	Line 371: function ArmoryDlg::saveLoadout(%this)
	Line 417: function clientCmdPushTeamMenu(%list)
	Line 430: function clientCmdProcessChooseTeam(%option)
	Line 440: function TeamMenu::onSelect(%this, %id, %text)
	Line 449: function clientCmdPushSpawnMenu(%list)
	Line 459: function SpawnMenu::onSelect(%this, %id, %text)
\scripts\gui\chooseLevelDlg.cs (8 hits)
	Line 23: function ChooseLevelDlg::onWake(%this)
	Line 62: function ChooseLevelDlg::onSleep( %this )
	Line 69: function buildMissionTypePopup(%popup)
	Line 82: function ChooseLevelDlgGoBtn::onMouseUp( %this )
	Line 119: function StartLevel(%mission, %serverType)
	Line 152: function CL_LevelList::onSelect(%this, %row)
	Line 190: function CL_LevelType::onSelect(%this, %id, %text)
	Line 210: function CL_LevelList::getMissionInfo(%this, %mission)
\scripts\gui\clusterHud.cs (5 hits)
	Line 23: function ClusterHud::onWake(%this)
	Line 28: function ClusterHud::onSleep(%this)
	Line 37: function ClusterHud::updateValues(%this)
	Line 47: function ClusterHud::updateSpeed(%this)
	Line 73: function ClusterHud::updateAlt(%this)
\scripts\gui\fireTeamHud.cs (3 hits)
	Line 23: function clientCmdToggleFireTeamHud(%val, %class)
	Line 39: function updateFTPlayers(%msgType, %msgString, %fTeam, %clientId, %count)
	Line 55: function clientCmdfireTeamInvitation(%cName, %fTeam)
\scripts\gui\guiMusicPlayer.cs (15 hits)
	Line 60: function toggleMusicPlayer(%val)
	Line 79: function GuiMusicPlayer_onSFXSourceStatusChange( %id, %status )
	Line 85: function GuiMusicPlayerClass::play( %this )
	Line 140: function GuiMusicPlayerClass::stop( %this )
	Line 149: function GuiMusicPlayerClass::onStop( %this )
	Line 163: function GuiMusicPlayerClass::pause( %this )
	Line 176: function GuiMusicPlayerClass::seek( %this, %playtime )
	Line 182: function GuiMusicPlayer::onWake( %this )
	Line 198: function GuiMusicPlayer::onSleep(%this)
	Line 204: function GuiMusicPlayerMusicListClass::load( %this )
	Line 225: function GuiMusicPlayerMusicList::onDoubleClick( %this )
	Line 231: function GuiMusicPlayerScrubber::onMouseDragged( %this )
	Line 236: function GuiMusicPlayerScrubberClass::setup( %this, %totalPlaytime )
	Line 244: function GuiMusicPlayerScrubberClass::update( %this )
	Line 253: function GuiMusicPlayerScrubberClass::onDragComplete( %this )
\scripts\gui\guiTreeViewCtrl.cs (2 hits)
	Line 23: function GuiTreeViewCtrl::onDefineIcons( %this )
	Line 38: function GuiTreeViewCtrl::handleRenameObject( %this, %name, %obj )
\scripts\gui\guiVideoPlayer.cs (3 hits)
	Line 34: function toggleVideoPlayer(%val)
	Line 53: function GuiVideoPlayer::onWake( %this )
	Line 76: function GuiMusicPlayer::onSleep(%this)
\scripts\gui\help.cs (6 hits)
	Line 23: function HelpDlg::onWake(%this)
	Line 45: function HelpFileList::onSelect(%this, %row)
	Line 57: function getHelp(%helpName)
	Line 78: function contextHelp()
	Line 93: function GuiControl::getHelpPage(%this)
	Line 98: function GuiMLTextCtrl::onURL(%this, %url)
\scripts\gui\joinServerDlg.cs (18 hits)
	Line 40: function JoinServerDlg::onWake()
	Line 98: function JoinServerDlg::query(%this)
	Line 118: function JoinServerDlg::queryLan(%this)
	Line 137: function JoinServerDlg::cancel(%this)
	Line 145: function JoinServerDlg::join(%this)
	Line 172: function JoinServerDlg::exit(%this)
	Line 179: function JoinServerDlg::update(%this)
	Line 206: function JS_serverList::onSelect(%this, %id, %text)
	Line 214: function JS_serverList::onRightMouseDown(%this, %column, %row, %mousePos)
	Line 226: function ServerPopupMenu::onSelect(%this, %id, %text)
	Line 279: function ServerPopupMenu::onCancel(%this)
	Line 284: function JS_sort::onSelect(%this, %id, %text)
	Line 306: function onServerQueryStatus(%status, %msg, %value)
	Line 336: function IP_AddressEdit::setField(%this)
	Line 342: function IP_AddressEdit::processEnter(%this)
	Line 365: function isCleanIP(%ip)
	Line 397: function connect(%ip, %pwd, %name, %skin)
	Line 405: function JS_listLabels::onSelect(%this, %id, %text)
\scripts\gui\loadingGui.cs (11 hits)
	Line 24: function LoadingGui::onAdd(%this)
	Line 30: function LoadingGui::onWake(%this)
	Line 39: function LoadingGui::onSleep(%this)
	Line 44: function LoadingGui::reset(%this)
	Line 61: function LOAD_MessageVector::addLine(%this, %text)
	Line 80: function handleLoadInfoMessage(%msgType, %msgString, %misFile, %mapName, %typeName, %missionType)
	Line 125: function handleLoadDescriptionMessage(%msgType, %msgString, %line)
	Line 138: function handleLoadRulesLineMessage(%msgType, %msgString, %line)
	Line 147: function handleLoadServerInfoMessage(%msgType, %msgString, %line)
	Line 156: function handleLoadInfoDoneMessage(%msgType, %msgString)
	Line 163: function handleLoadFailedMessage( %msgType, %msgString )
\scripts\gui\mainMenuGui.cs (1 hit)
	Line 27: function MainMenuGui::onWake(%this)
\scripts\gui\messageBoxes\messageBox.ed.cs (22 hits)
	Line 77: function messageCallback(%dlg, %callback)
	Line 83: //The # in the function passed replaced with the output 
	Line 85: function IOCallback(%dlg, %callback)
	Line 99: function MBSetText(%text, %frame, %msg)
	Line 134: function MessageBoxOK(%title, %message, %callback)
	Line 142: function MessageBoxOKDlg::onSleep( %this )
	Line 147: function MessageBoxOKCancel(%title, %message, %callback, %cancelCallback)
	Line 156: function MessageBoxOKCancelDlg::onSleep( %this )
	Line 161: function MessageBoxOKCancelDetails(%title, %message, %details, %callback, %cancelCallback)
	Line 193: function MBOKCancelDetailsToggleInfoFrame()
	Line 227: function MessageBoxOKCancelDetailsDlg::onSleep( %this )
	Line 232: function MessageBoxYesNo(%title, %message, %yesCallback, %noCallback)
	Line 242: function MessageBoxYesNoCancel(%title, %message, %yesCallback, %noCallback, %cancelCallback)
	Line 253: function MessageBoxYesNoDlg::onSleep( %this )
	Line 263: function MessagePopup(%title, %message, %delay)
	Line 279: function IODropdown(%title, %message, %simgroup, %callback, %cancelCallback)
	Line 299: function IODropdownDlg::onSleep( %this )
	Line 306: function CloseMessagePopup()
	Line 312: // "Old" message box function aliases for backwards-compatibility.
	Line 315: function MessageBoxOKOld( %title, %message, %callback )
	Line 319: function MessageBoxOKCancelOld( %title, %message, %callback, %cancelCallback )
	Line 323: function MessageBoxYesNoOld( %title, %message, %yesCallback, %noCallback )
\scripts\gui\objectiveHud.cs (15 hits)
	Line 25: function objectiveHud::configure(%this, %gameType)
	Line 306: function clearObjHudMSG(%msgType, %msgString, %a1, %a2, %a3, %a4, %a5, %a6)
	Line 315: function checkTeamLines(%msgType, %msgString, %team, %a2, %a3, %a4, %a5, %a6)
	Line 332: function swapTeamLines()
	Line 382: function yourRankIs(%msgType, %msgString, %a1, %a2, %a3, %a4, %a5, %a6)
	Line 390: function teamScoreIs(%msgType, %msgString, %teamNum, %score, %a3, %a4, %a5, %a6)
	Line 401: function handleYourScore(%msgType, %msgString, %score)
	Line 409: function handleYourDeaths(%msgType, %msgString, %deaths)
	Line 420: function handleYourKills(%msgType, %msgString, %kills)
	Line 432: function tdmAddTeam(%msgType, %msgString, %teamNum, %team)
	Line 439: function tdmTeamDeaths(%msgType, %msgString, %teamNum, %deaths, %a3, %a4, %a5, %a6)
	Line 451: function mfdAddTeam(%msgType, %msgString, %teamNum, %team)
	Line 458: function mfdMarkName(%msgType, %msgString, %teamNum, %mark, %a3, %a4, %a5, %a6)
	Line 471: function rtfAddTeam(%msgType, %msgString, %teamNum, %team)
	Line 478: function rtfFlagStatus(%msgType, %msgString, %name, %status, %a3, %a4, %a5, %a6)
\scripts\gui\optionsDlg.cs (47 hits)
	Line 26: function GraphicsQualityLevel::isCurrent( %this )
	Line 46: function GraphicsQualityLevel::apply( %this )
	Line 67: function GraphicsQualityPopup::init( %this, %qualityGroup )
	Line 93: function GraphicsQualityPopup::apply( %this, %qualityGroup, %testNeedApply )
	Line 116: function OptionsDlg::setPane(%this, %pane)
	Line 132: function Opt_Tabs::onTabSelected(%this, %tab)
	Line 141: function OptionsDlg::onWake(%this)
	Line 315: function OptionsDlg::onSleep(%this)
	Line 330: function OptionsDlg::saveSettings(%this)
	Line 369: function OptGraphicsDriverMenu::onSelect( %this, %id, %text )
	Line 392: function _makePrettyResString( %resString )
	Line 417: function OptionsDlg::initResMenu( %this )
	Line 454: function OptionsDlg::applyGraphics( %this, %testNeedApply )
	Line 555: function OptionsDlg::_updateApplyState( %this )
	Line 566: function OptionsDlg::_autoDetectQuality( %this )
	Line 580: function restoreDefaultMappings()
	Line 589: function getMapDisplayName( %device, %action )
	Line 648: function OptBindListMenu::init(%this)
	Line 659: function OptBindListMenu::onSelect( %this, %id, %text )
	Line 665: function buildFullMapString( %index )
	Line 705: function OptionsDlg::fillRemapList( %this )
	Line 724: function OptionsDlg::doRemap( %this )
	Line 748: function redoMapping( %device, %action, %cmd, %oldIndex, %newIndex )
	Line 772: function findRemapCmdIndex( %command )
	Line 803: function unbindExtraActions( %command, %count )
	Line 831: function OptRemapInputCtrl::onInputEvent( %this, %device, %action )
	Line 951: function MouseXSlider::sync( %this )
	Line 962: function MouseYSlider::sync( %this )
	Line 973: function toggleInvertYAxis()
	Line 1003: function OptAudioUpdateMasterVolume( %volume )
	Line 1015: function OptAudioUpdateChannelVolume( %description, %volume )
	Line 1032: function OptAudioProviderList::onSelect( %this, %id, %text )
	Line 1066: function OptAudioDeviceList::onSelect( %this, %id, %text )
	Line 1083: function OptMouseSetSensitivity(%value)
	Line 1089: function OptAudioHardwareToggle::onClick(%this)
	Line 1096: function OptAudioUpdate()
	Line 1111: function Tgl_9::onAction(%this)
	Line 1135: function Tgl_10::onAction(%this)
	Line 1154: function Tgl_11::onAction(%this)
	Line 1178: function Tgl_12::onAction(%this)
	Line 1202: function Tgl_13::onAction(%this)
	Line 1229: function OptPlayerNameInput::setField(%this)
	Line 1236: function OptPlayerSkinMenu::init(%this)
	Line 1262: function OptPlayerSkinMenu::onSelect(%this, %id, %text)
	Line 1280: function updateFieldOfView()
	Line 1291: function setFNameColor()
	Line 1302: function setENameColor()
\scripts\gui\playGui.cs (19 hits)
	Line 23: function PlayGui::onWake(%this)
	Line 52: function PlayGui::onSleep(%this)
	Line 82: function PlayGui::clearHud( %this )
	Line 92: function PlayGui::refreshElements(%this)
	Line 121: function PlayGui::onMouseUp(%this){ }
	Line 122: function PlayGui::onMouseDown(%this){ }
	Line 123: function PlayGui::onMouseMove(%this){ }
	Line 124: function PlayGui::onMouseDragged(%this){ }
	Line 125: function PlayGui::onMouseEnter(%this){ }
	Line 126: function PlayGui::onMouseLeave(%this){ }
	Line 128: function PlayGui::onMouseWheelUp(%this){ }
	Line 129: function PlayGui::onMouseWheelDown(%this){ }
	Line 130: function PlayGui::onRightMouseDown(%this){ }
	Line 131: function PlayGui::onRightMouseUp(%this){ }
	Line 132: function PlayGui::onRightMouseDragged(%this){ }
	Line 133: function PlayGui::onMiddleMouseDown(%this){ }
	Line 134: function PlayGui::onMiddleMouseUp(%this){ }
	Line 135: function PlayGui::onMiddleMouseDragged(%this){ }
	Line 137: function PlayGui::onRightMouseDown(%this, %pos, %start, %ray)
\scripts\gui\quickChatHud.cs (10 hits)
	Line 28: function toggleQuickChatHud( %val )
	Line 54: function openChatRoot()
	Line 60: function openChatGroup( %key, %name )
	Line 85: function closeChatGroup()
	Line 91: function addChatItem( %key, %teamOnly, %name, %text, %audioFile, %animation, %play3D )
	Line 113: function parentChatGroup()
	Line 121: function QuickChatMenuHud::onWake( %this )
	Line 126: function QuickChatMenuHud::readObject( %this, %object )
	Line 152: function QuickChatMenuHud::onSleep( %this )
	Line 157: function QuickChatMenuHud::selectObject( %this, %object )
\scripts\gui\recordings.cs (5 hits)
	Line 28: function recordingsDlg::onWake()
	Line 41: function StartSelectedDemo()
	Line 72: function startDemoRecord()
	Line 112: function stopDemoRecord()
	Line 122: function demoPlaybackComplete()
\scripts\gui\scoreHud.cs (8 hits)
	Line 22: function ScoreGui::configure(%this, %gameType)
	Line 76: function ScoreGui::onWake(%this)
	Line 93: function ScoreGui::onSleep(%this)
	Line 101: function clientCmdToggleScoreHud(%val)
	Line 110: function clientCmdOpenScoreHud()
	Line 118: function clientCmdCloseScoreHud()
	Line 129: function handleSetTeamScores(%msgType, %msgString, %a1, %a2)
	Line 156: function updatePlayerScoreList()
\scripts\gui\serverOptionsDlg.cs (4 hits)
	Line 23: function ServerOptionsDlg::onWake(%this)
	Line 51: function ServerOptionsDlg::onSleep(%this)
	Line 82: function checkIsNumber(%string)
	Line 98: function setBotCount()
\scripts\gui\startupGui.cs (5 hits)
	Line 27: function loadStartup()
	Line 40:    // Call the next() function to set our firt
	Line 48: function StartupGui::click(%this)
	Line 54: function StartupGui::next(%this)
	Line 118: function StartupGui::onDone(%this)
\scripts\gui\vehicleHud.cs (7 hits)
	Line 23: function vehicleHud::onWake( %this )
	Line 50: function vehicleHud::onSleep( %this )
	Line 56: function VehiclesMenu::onSelect( %this, %id, %text )
	Line 64: function clientCmdSetVehicleCount( %v1, %v2, %v3 )
	Line 69: function clientCmdSelectedVehicle(%vehicle, %bitmap)
	Line 75: function clientCmdGetVehicleList(%list)
	Line 81: function clientCmdGetVBitmapList(%taggedlist)
\scripts\main.cs (10 hits)
	Line 47: function Torque::onStart(%this)
	Line 100: function onExit()
	Line 140: function Torque::displayHelp(%this)
	Line 164: function Torque::parseArgs(%this)
	Line 277: function LogEcho(%string)
	Line 298: function Torque::getMissionTypeDisplayNames(%this)
	Line 315: function Torque::buildMissionList(%this)
	Line 336: function Torque::addMissionFile( %this, %file )
	Line 392: function Torque::getLevelInfo( %this, %missionFile ) 
	Line 437: function Torque::getMissionCount(%this, %type)
\scripts\parseArgs.cs (4 hits)
	Line 26: function pushFront(%list, %token, %delim)
	Line 33: function pushBack(%list, %token, %delim)
	Line 40: function popFront(%list, %delim)
	Line 48: function defaultParseArgs()
\scripts\server\admin.cs (24 hits)
	Line 23: function serverCmdSAD(%client, %password)
	Line 83: function ResetSadAttp(%client)
	Line 88: function serverCmdSADSetPassword(%client, %password)
	Line 94: function serverCmdGetRemoteCmdMenu(%client)
	Line 109: function serverCmdsendPlayerPopupMenu(%client, %targetClient, %key)
	Line 115: function serverCmdGetVoteMenu(%client, %key)
	Line 121: function serverCmdGetMissionTypeList(%client, %key)
	Line 127: function serverCmdGetMissionList(%client, %key, %type)
	Line 151: function serverCmdGetTimeLimitList(%client, %key)
	Line 164: function AdminCommand(%client, %typename, %val1, %val2, %val3, %val4)
	Line 180: function PlayerVote(%client, %typename, %arg1, %arg2, %arg3, %arg4, %clientsVoting, %teamSpecific)
	Line 214: function resetVotePrivs(%client)
	Line 223: function serverCmdSetPlayerVote(%client, %vote)
	Line 238: function calcVotes(%client, %typeName, %arg1, %arg2, %arg3, %arg4)
	Line 276: function clearVotes()
	Line 297: function serverCmdInitVote(%client, %typeName, %val1, %val2, %val3, %val4, %playerVote)
	Line 310: function serverCmdInitAdminCommand(%client, %typeName, %target)
	Line 471: function clearserver(%client)
	Line 507: function serverCmdTogglePlayerMute(%client, %who)
	Line 521: function isOnAdminList(%client)
	Line 537: function isOnSuperAdminList(%client)
	Line 553: function AddToAdminList(%admin, %client)
	Line 572: function AddToSuperAdminList(%client)
	Line 591: function getAdmin()
\scripts\server\aiClient.cs (38 hits)
	Line 55: function addBotName(%name)
	Line 87: function getRandomBotName()
	Line 95: // Called from server.cs function Torque::buildServer() before loadMission()
	Line 96: function connectAiClients(%num)
	Line 113: function AIConnection::onConnect(%client, %name)
	Line 159: function AIConnection::setPlayerName(%client, %name)
	Line 166: function AIConnection::onDrop(%client, %reason)
	Line 186: function AIConnection::isMounted(%client)
	Line 200: function AIClient::setBotFav(%client, %list)
	Line 269: function AIClient::ProcessLoadout(%client)
	Line 359: function AIClient::setUpTasks(%client)
	Line 389: function AIClient::onEndGame(%client)
	Line 399: function AIClient::clearTasks(%this)
	Line 435: function AIClient::done(%this, %time)
	Line 440: function AIClient::animate(%this, %seq)
	Line 450: function AIClient::onAdd(%client)
	Line 455: function AIClient::onReachDestination(%client)
	Line 461: function AIClient::onStuck(%client)
	Line 467: function AIClient::onUnStuck(%client)
	Line 472: function AIClient::onMove(%client)
	Line 477: function AIClient::onStop(%client)
	Line 482: function AIClient::onTargetEnterLOS(%client)
	Line 487: function AIClient::onTargetExitLOS(%client)
	Line 494: // This function runs as a continuous loop on the client.
	Line 495: function AIClient::think(%client)
	Line 566: function AIClient::chooseWeapon(%client, %target, %dist)
	Line 619: function AIClient::onDamaged(%client, %bot, %delta)
	Line 629: function AIClient::choosePlayerTarget(%client)
	Line 662: function AIClient::chooseWingman(%client)
	Line 720: function AIClient::getAngleofVector(%client, %vec)
	Line 752: //This is another function taken from code off of garagegames.
	Line 755: function AIClient::check2DAngletoTarget(%client, %tgt)
	Line 772: //This function checks to see if the target supplied is within the bots FOV
	Line 773: function AIClient::isTargetInView(%client, %tgt, %fov)
	Line 790: function AIClient::hasLOStoTarget(%client, %target)
	Line 815: function AIClient::hasLOStoPosition(%client, %endPos)
	Line 834: function AIClient::findHealth(%client)
	Line 855: function AIClient::getRandomLoadout(%client)
\scripts\server\aiPlayer.cs (33 hits)
	Line 43: function Armor::onReachDestination(%this, %obj)
	Line 64: function Armor::onMoveStuck(%this, %obj)
	Line 71: function Armor::onTargetExitLOS(%this,%obj)
	Line 76: function Armor::onTargetEnterLOS(%this,%obj)
	Line 81: function Armor::onEndSequence(%this,%obj,%slot)
	Line 92: function AIPlayer::spawnAtLocation(%name, %spawnPoint)
	Line 110: function AIPlayer::spawnOnPath(%name, %path)
	Line 125: function AIPlayer::followPath(%this, %path, %node)
	Line 149: function AIPlayer::moveToNextNode(%this)
	Line 165: function AIPlayer::moveToNode(%this,%index)
	Line 178: function AIPlayer::pushTask(%this, %method)
	Line 193: function AIPlayer::clearTasks(%this)
	Line 199: function AIPlayer::nextTask(%this)
	Line 208: function AIPlayer::executeTask(%this,%index)
	Line 216: function AIPlayer::singleShot(%this)
	Line 230: function AIPlayer::wait(%this, %time)
	Line 235: function AIPlayer::done(%this,%time)
	Line 240: function AIPlayer::fire(%this,%bool)
	Line 253: function AIPlayer::aimAt(%this,%object)
	Line 260: function AIPlayer::animate(%this,%seq)
	Line 267: function AIPlayer::test()
	Line 287: function AIPlayer::doWanderTask(%player)
	Line 311: function AIPlayer::moveRandom(%player)
	Line 330: function AIPlayer::scanArea(%player)
	Line 362: function AIPlayer::getRanBotDest(%player)
	Line 377: function AIPlayer::getTargetDistance(%this, %target)
	Line 388: function AIPlayer::getNearestPlayerTarget(%this)
	Line 422: function AIPlayer::think(%player)
	Line 446: function AIPlayer::spawn(%path)
	Line 470: function addBotName(%name)
	Line 502: function getRandomBotName()
	Line 508: function AIPlayer::testBot()
	Line 555: function serverCmdsetWanderPosition(%client)
\scripts\server\antispam.cs (37 hits)
	Line 26: function GameBaseData::onAdd(%data, %obj)
	Line 28:    //function was added to reduce console err msg spam
	Line 34: function ShapeBaseData::damage(%this, %obj, %position, %source, %amount, %damageType)
	Line 39: function ShapeBaseData::onInventory(%this,%user,%value)
	Line 46: function ShapeBase::onInventory(%this, %data, %value)
	Line 53: //function RigidShape::getState(%this)
	Line 58: //function StaticShape::getState(%this)
	Line 63: //function Vehicle::getState(%this)
	Line 71: function SimObject::onAdd(%data, %obj)
	Line 73:    //function was added to reduce console err msg spam
	Line 76: function SimObject::damage(%this, %obj, %position, %source, %amount, %damageType)
	Line 78:    //function was added to reduce console err msg spam
	Line 81: function SimObject::decCatagory(%this)
	Line 83:    //function was added to reduce console err msg spam
	Line 86: function SimObject::incCatagory(%this)
	Line 88:    //function was added to reduce console err msg spam
	Line 91: function SimObject::onInventory(%this, %obj)
	Line 94:    //function was added to reduce console error msg spam
	Line 97: function SimObject::initializeObjective(%this)
	Line 99:    //function was added to reduce console err msg spam
	Line 102: function SimObject::getType(%this)
	Line 107: function SimObject::setupPositionMarkers(%group, %create)
	Line 109:    //function was added to reduce console err msg spam
	Line 112: function MissionMarker::onTrigger(%obj, %triggerId, %val)
	Line 117: function WayPoint::onTrigger(%obj, %triggerId, %val)
	Line 122: function SpawnSphere::onTrigger(%obj, %triggerId, %val)
	Line 130: function VehicleBlocker::getDataBlock(%this)
	Line 135: function VehicleBlocker::getName(%this)
	Line 140: function InteriorInstance::getDataBlock(%this)
	Line 145: function InteriorInstance::getName(%this)
	Line 150: function PhysicalZone::getDataBlock(%this)
	Line 155: function PhysicalZone::getName(%this)
	Line 163: function WaterBlock::damage(%this)
	Line 168: function TerrainBlock::damage(%this)
	Line 176: function TerrainBlock::getDataBlock(%this)
	Line 181: function TerrainBlock::getName(%this)
	Line 186: function Projectile::isMounted(%this)
\scripts\server\audio.cs (2 hits)
	Line 25: function ServerPlay2D(%profile)
	Line 33: function ServerPlay3D(%profile,%transform)
\scripts\server\camera.cs (33 hits)
	Line 27: function Observer::onTrigger(%this,%obj,%trigger,%state)
	Line 50: function Observer::setMode(%this,%obj,%mode,%arg1,%arg2,%arg3)
	Line 69: function Spectator::onTrigger(%data, %obj, %trigger, %state)
	Line 87: function Spectator::setMode(%data, %obj, %mode, %targetObj)
	Line 103: function Camera::onAdd(%this, %obj)
	Line 109: function Camera::setMode(%this, %mode, %arg1, %arg2, %arg3)
	Line 119: function serverCmdTogglePathCamera(%client, %val)
	Line 133: function serverCmdToggleCamera(%client)
	Line 149: function serverCmdSetEditorCameraPlayer(%client)
	Line 160: function serverCmdSetEditorCameraPlayerThird(%client)
	Line 171: function serverCmdDropPlayerAtCamera(%client)
	Line 186: function serverCmdDropCameraAtPlayer(%client)
	Line 194: function serverCmdCycleCameraFlyType(%client)
	Line 223: function serverCmdSetEditorCameraStandard(%client)
	Line 233: function serverCmdSetEditorCameraNewton(%client)
	Line 244: function serverCmdSetEditorCameraNewtonDamped(%client)
	Line 255: function serverCmdSetEditorOrbitCamera(%client)
	Line 262: function serverCmdSetEditorFlyCamera(%client)
	Line 269: function serverCmdEditorOrbitCameraSelectChange(%client, %size, %center)
	Line 282: function serverCmdEditorCameraAutoFit(%client, %radius)
	Line 293: function findNextObserveClient(%client)
	Line 345: function findPrevObserveClient(%client)
	Line 397: function observeClient(%client, %target)
	Line 461: function spectatorFollowUpdate( %client, %nextClient, %cycle )
	Line 522: function updateSpectatorHud(%client)
	Line 588: function displaySpectatorHud(%client, %targetClient, %potentialClient)
	Line 613: function resetSpectatorFollow( %client, %dismount )
	Line 659: function PathCameraData::create(%block, %team, %pos)
	Line 669: function PathCameraData::onNode(%this,%camera,%node)
	Line 678: function PathCamera::reset(%this,%speed)
	Line 684: function PathCamera::followPath(%this,%path)
	Line 698: function PathCamera::pushPath(%this,%path)
	Line 704: function PathCamera::pushNode(%this,%node)
\scripts\server\centerPrint.cs (8 hits)
	Line 23: function centerPrintAll( %message, %time, %lines )
	Line 37: function bottomPrintAll( %message, %time, %lines )
	Line 53: function centerPrint( %client, %message, %time, %lines )
	Line 62: function bottomPrint( %client, %message, %time, %lines )
	Line 72: function clearCenterPrint( %client )
	Line 77: function clearBottomPrint( %client )
	Line 84: function clearCenterPrintAll()
	Line 95: function clearBottomPrintAll()
\scripts\server\commands.cs (30 hits)
	Line 27: function serverCmdNetSimulateLag( %client, %msDelay, %packetLossPercent )
	Line 33: function serverCmdDoMelee(%client)
	Line 71: function serverCmdSAD( %client, %password )
	Line 82: function serverCmdSADSetPassword(%client, %password)
	Line 92: function serverCmdShowScoreHud(%client)
	Line 98: function serverCmdHideScoreHud(%client)
	Line 105: function updateScoreHudThread(%client, %tag)
	Line 112: function serverCmdSuicide(%client)
	Line 121: function serverCmdPlayCel(%client, %anim)
	Line 137: function serverCmdPlayDeath(%client)
	Line 150: function serverCmdUse(%client, %data)
	Line 160: function serverCmdThrow(%client, %data)
	Line 205: function serverCmdSelectWeaponSlot(%client, %data)
	Line 225: function serverCmdCycleWeapon(%client, %data)
	Line 313: function serverCmdReloadWeapon(%client)
	Line 329: function serverCmdUseSpecial(%client, %val)
	Line 351: function serverCmdThrowGrenade(%client, %val)
	Line 364: function serverCmdThrowFlag(%client, %val)
	Line 385: function serverCmdPushTeamChooseMenu(%client)
	Line 392: function serverCmdPushSpawnChooseMenu(%client)
	Line 399: function serverCmdclientChooseSpawn(%client, %option, %value)
	Line 406: // function uses a waiting period when changing teams to prevent team change 
	Line 409: function serverCmdClientJoinTeam(%client, %team, %admin)
	Line 474: function serverCmdClientAddToGame(%client, %targetClient)
	Line 498: function serverCmdChangePlayersTeam(%clientRequesting, %client, %team)
	Line 528: function serverCmdForceClientToSpectator(%clientRequesting, %client)
	Line 555: function serverCmdClientChooseTeam(%client, %option)
	Line 629: function serverCmdSendPlayerListUpdate(%client)
	Line 646: function serverCmdDoIronSights(%client, %val)
	Line 671: function serverCmdUndoIronSights(%client, %val)
\scripts\server\deployables.cs (21 hits)
	Line 40: function addToDeploySet(%object)
	Line 54: function ShapeBaseImageData::testMaxDeployed(%data, %player)
	Line 59: function ShapeBaseImageData::testNoSurfaceInRange(%data, %player)
	Line 64: function ShapeBaseImageData::testSlopeTooGreat(%data, %surface, %surfaceNrm)
	Line 70: function ShapeBaseImageData::testSelfTooClose(%data, %surfacePt, %player)
	Line 77: function ShapeBaseImageData::testObjectTooClose(%data, %surfacePt, %player)
	Line 87: function ShapeBaseImageData::testVerticleObstruction(%data, %player)
	Line 97: function ShapeBaseImageData::testObjectInterference(%data, %surfacePt)
	Line 102: function ShapeBaseImageData::testNoTerrainFound(%data, %surface)
	Line 108: function ShapeBaseImageData::testNoInteriorFound(%data, %surface)
	Line 114: function ShapeBaseImageData::testMissionArea(%data, %player)
	Line 122: function ShapeBaseImageData::checkPositions(%data, %pos1, %pos2)
	Line 134: function ShapeBaseImageData::testDeployConditions(%data, %player, %slot)
	Line 229: function ShapeBaseImageData::attemptDeploy(%data, %player, %slot, %disqualified)
	Line 235: function activateDeploySensorRed(%pl)
	Line 244: function activateDeploySensorGrn(%pl)
	Line 253: function deactivateDeploySensor(%pl)
	Line 262: function ShapeBaseImageData::displayErrorMsg(%data, %plyr, %slot, %error)
	Line 307: function ShapeBaseImageData::onDeploy(%data, %player, %slot)
	Line 345: function resetjustdeployed(%obj)
	Line 350: function ShapeBaseImageData::getInitialRotation(%item, %plyr)
\scripts\server\environment.cs (8 hits)
	Line 25: function TimeOfDay::onTimeEvent( %this )
	Line 30: function TimeOfDay::onAnimateStart( %this )
	Line 216: function Lightning::applyDamage(%this, %position, %normal, %targetObject)
	Line 223: function Lightning::onNewDataBlock(%data, %obj)
	Line 231: function addPrecip(%type)
	Line 512: //function ExplosionData::onNewDataBlock(%this, %obj)
	Line 513: function FireballExplosion::onNewDataBlock(%this, %obj)
	Line 517:       // This needs its own radius damage function because radiusDamage() requires GameBase source object.
\scripts\server\explosions\grenadefx.cs (1 hit)
	Line 283:    // SplashData doesn't have a render function in the source, 
\scripts\server\fireTeam.cs (14 hits)
	Line 27: function Torque::setupFireTeams(%this)
	Line 45: function serverCmdcreateFireTeam(%client, %index)
	Line 81: function serverCmdjoinFireTeam(%client, %class)
	Line 126: function serverCmdleaveFireTeam(%client)
	Line 174: function serverCmddisbandFireTeam(%client)
	Line 196: function serverCmdinviteFireTeam(%client, %target)
	Line 216: function serverCmdkickFireTeam(%client, %target)
	Line 261: function serverCmdacceptInvite(%client, %fireTeam)
	Line 266: function serverCmddeclineInvite(%client, %fireTeam)
	Line 273: function serverCmdGetFireTeamMenu(%client, %key)
	Line 284: function serverCmdGetJoinFireTeamMenu(%client, %key)
	Line 297: function serverCmdFireTeamMessageSent(%client, %text)
	Line 326: function chatMessageFireTeam( %sender, %fireTeam, %msgString, %a1, %a2, %a3, %a4, %a5, %a6, %a7, %a8, %a9, %a10 )
	Line 347: function messageFireTeam(%fireTeam, %msgType, %msgString, %a1, %a2, %a3, %a4, %a5, %a6, %a7, %a8, %a9, %a10, %a11, %a12, %a13)
\scripts\server\gameConnection.cs (22 hits)
	Line 25: // This script function is called before a client connection
	Line 30: function GameConnection::onConnectRequest( %client, %netAddress, %name, %skin )
	Line 47: // This script function is the first called on a client accept
	Line 49: function GameConnection::onConnect( %client, %name, %skin )
	Line 188: function writeConnectionLog()
	Line 201: function readConnectionLog()
	Line 222: function GameConnection::getCleanIP(%client)
	Line 248: function GameConnection::setPlayerName(%client, %name)
	Line 290: function isNameUnique(%name)
	Line 305: // This function is called when a client drops for any reason
	Line 307: function GameConnection::onDrop(%client, %reason)
	Line 338: // The server invokes the client MissionStartPhase[1-3] function to request
	Line 342: function GameConnection::loadMission(%client)
	Line 351: function GameConnection::onDataBlocksDone( %client, %missionSequence )
	Line 364: function GameConnection::clientWantsGhostAlwaysRetry(%client)
	Line 370: function GameConnection::onGhostAlwaysFailed(%client)
	Line 375: function GameConnection::onGhostAlwaysObjectsReceived(%client)
	Line 384: function GameConnection::startMission(%client)
	Line 390: function GameConnection::endMission(%client)
	Line 402: function GameConnection::waitTimeout(%client)
	Line 408: function GameConnection::SendVehicleList(%client)
	Line 429: function GameConnection::syncClock(%client, %time)
\scripts\server\gametypes\CoreGame.cs (71 hits)
	Line 60: function CoreGame::activatePackages(%game)
	Line 71: function CoreGame::deactivatePackages(%game)
	Line 79: function CoreGame::onMissionLoaded(%game)
	Line 113: function CoreGame::setupObjectCounts(%game)
	Line 140: function CoreGame::setupGameParams(%game)
	Line 159: function SimGroup::assignTeam(%this, %team)
	Line 203: function CoreGame::claimSpawn(%game, %obj, %newTeam, %oldTeam)
	Line 217: function CoreGame::sendClientTeamList(%game, %client)
	Line 232: function CoreGame::checkMatchStart(%game)
	Line 251: function CoreGame::checkTournamentStart(%game)
	Line 317: function CoreGame::Countdown(%game, %timeMS)
	Line 346: function CoreGame::notifyMatchStart(%game, %time)
	Line 360: function CoreGame::startGame(%game)
	Line 364:    // The default onMissionLoaded function starts the game.
	Line 452: // Called from function serverCmdMissionStartPhase2Ack in commands.cs
	Line 453: function CoreGame::setClientState(%game, %client)
	Line 531: // Called from function serverCmdMissionStartPhase3Ack in commands.cs
	Line 532: function CoreGame::onClientEnterGame(%game, %client)
	Line 620: function CoreGame::pickObserverSpawn(%game, %client, %next)
	Line 652: function CoreGame::pickSpawnPoint(%game, %team) 
	Line 714: function CoreGame::pickPointInSpawnSphere(%game, %spawnSphere)
	Line 772: function CoreGame::spawnPlayer(%game, %client, %respawn)
	Line 780: function CoreGame::createPlayer(%game, %client, %spawnPoint, %respawn)
	Line 923: function CoreGame::loadOut(%game, %player)
	Line 942: function CoreGame::onClientLeaveGame(%game, %client)
	Line 968: function CoreGame::onDamaged(%game, %clVictim, %clAttacker, %sourceObject, %damageType)
	Line 988: function CoreGame::friendlyFireMessage(%game, %damaged, %damager)
	Line 994: function CoreGame::onDeath(%game, %player, %client, %sourceObject, %sourceClient, %damageType, %damLoc)
	Line 1082: function CoreGame::clearRespawnWait(%game, %client)
	Line 1089: function CoreGame::clearClientVaribles(%game, %client)
	Line 1107: function CoreGame::EndCountdown(%game, %timeMS)
	Line 1129: function CoreGame::notifyMatchEnd(%game, %time)
	Line 1138: function CoreGame::onGameDurationEnd(%game)
	Line 1143:    // to have a function to cancel the schedule.
	Line 1151: function CoreGame::cycleGame(%game)
	Line 1154:    // This is setup as a schedule so that this function can be called
	Line 1165: function CoreGame::endGame(%game)
	Line 1201: function CoreGame::setupClientTeams(%game)
	Line 1275: function CoreGame::onCyclePauseEnd(%game)
	Line 1289: //function CoreGame::onCyclePauseEnd(%game)
	Line 1322: function CoreGame::getNextMission(%game, %mission, %misType)
	Line 1371: function CoreGame::findNextCycleMission(%game)
	Line 1391: function CoreGame::cycleMissions(%game)
	Line 1406: function CoreGame::forceSpectator(%game, %client, %reason)
	Line 1476: function CoreGame::onClientBecomeSpectator(%game, %client)
	Line 1482: function CoreGame::cancelCountdown(%game)
	Line 1518: function CoreGame::cancelEndCountdown(%game)
	Line 1549: function CoreGame::getTeamClientCount(%game, %team)
	Line 1564: function CoreGame::getTeamPlayerCount(%game, %team)
	Line 1581: function CoreGame::getLargestTeam(%game)
	Line 1608: function CoreGame::findTopScorer(%game)
	Line 1627: function CoreGame::findTopKiller(%game)
	Line 1649: function CoreGame::updateScoreHud(%game, %client)
	Line 1663: function CoreGame::SpectatorOnTrigger(%game, %data, %obj, %trigger, %state, %client)
	Line 1865: function CoreGame::SpectatorSetMode(%game, %data, %obj, %mode, %targetObj)
	Line 1930: function CoreGame::onEnterTrigger(%game, %data, %obj, %colobj)
	Line 1935: function CoreGame::onLeaveTrigger(%game, %data, %obj, %colobj)
	Line 1940: function CoreGame::onTickTrigger(%game, %data, %obj)
	Line 1948: function CoreGame::sendPlayerVoteMenu(%game, %client, %targetClient, %key)
	Line 2071: function CoreGame::sendServerVoteMenu(%game, %client, %key)
	Line 2075:    // This function fills the ESC_VoteMenu in the AdminDlg
	Line 2179: function CoreGame::InitVote(%game, %client, %typeName, %val1, %val2, %val3, %val4, %playerVote)
	Line 2308: function CoreGame::evalVote(%game, %client, %typeName, %admin, %val1, %val2, %val3, %val4)
	Line 2738: function CoreGame::vehicleDestroyed(%game, %obj, %destroyer)
	Line 2756: function CoreGame::staticShapeDestroyed(%game, %obj, %destroyer)
	Line 2774: function CoreGame::turretDestroyed(%game, %obj, %destroyer)
	Line 2792: function CoreGame::playerTouchSwitch(%game, %switch, %player)
	Line 2808: function CoreGame::awardScoreDeath(%game, %victimID, %damageType)
	Line 2825: function CoreGame::awardScoreKill(%game, %killerID, %damageType)
	Line 2837: function CoreGame::awardScoreSuicide(%game, %victimID)
	Line 2846: function CoreGame::awardScoreTeamkill(%game, %victimID, %killerID)
\scripts\server\gametypes\DMGame.cs (17 hits)
	Line 32:    function DMdummy()
	Line 38: function DMGame::setupGameParams(%game)
	Line 48: function DMGame::getTeamName(%game, %team)
	Line 56: function DMGame::setUpTeams(%game)
	Line 87: function DMGame::onClientEnterGame(%game, %client)
	Line 107: function DMGame::onClientLeaveGame(%game, %client)
	Line 116: function DMGame::getClientIndex(%game, %client)
	Line 127: function DMGame::assignClientTeam(%game, %client)
	Line 142: function DMGame::clientChangeTeam(%game, %client, %team, %fromObs)
	Line 153: function DMGame::clientJoinTeam(%game, %client, %team, %respawn)
	Line 163: function DMGame::createPlayer(%game, %client, %spawnPoint, %respawn)
	Line 191: function DMGame::onDeath(%game, %player, %client, %sourceObject, %sourceClient, %damageType, %damLoc)
	Line 214: function DMGame::updateScore(%game, %cl)
	Line 232: function DMGame::endGame(%game)
	Line 247: function DMGame::pushChooseTeamMenu(%game, %client)
	Line 254: function DMGame::pushChooseSpawnMenu(%game, %client)
	Line 260: function DMGame::clientChooseSpawn(%game, %client, %option, %value)
\scripts\server\gametypes\MfDGame.cs (30 hits)
	Line 32:    function ArmoryCrate::onCollision(%data, %obj, %col)
	Line 54:    function resetThreatTimer(%client)
	Line 60: function MfDGame::setupGameParams(%game)
	Line 73: function MfDGame::onMissionLoaded(%game)
	Line 84: function MfDGame::setUpTeams(%game)
	Line 135: function MfDGame::getTeamName(%game, %team)
	Line 140: function MfDGame::onClientEnterGame(%game, %client)
	Line 161: function MfDGame::onClientLeaveGame(%game, %client)
	Line 172: function MfDGame::assignClientTeam(%game, %client, %respawn)
	Line 208: function MfDGame::clientJoinTeam(%game, %client, %team, %respawn)
	Line 232: function MfDGame::loadOut(%game, %player)
	Line 251: function MfDGame::pickTeamMark(%game, %team)
	Line 311: function MfDGame::onLeaveMissionArea(%game, %player)
	Line 320: function MfDGame::onEnterMissionArea(%game, %player)
	Line 326: function MfDGame::AlertPlayer(%game, %count, %player)
	Line 334: function MfDGame::MissionAreaDamage(%game, %player)
	Line 355: function MfDGame::onDamaged(%game, %clVictim, %clAttacker, %sourceObject, %damageType)
	Line 368: function MfDGame::onDeath(%game, %player, %client, %sourceObject, %sourceClient, %damageType, %damLoc)
	Line 408: function MfDGame::testMarkDefend(%game, %victim, %killer)
	Line 413: function MfDGame::awardScoreMarkDefend(%game, %client)
	Line 421: function MfDGame::updateScore(%game, %cl)
	Line 449: function MfDGame::getScoreLimit(%game)
	Line 468: function MfDGame::checkScoreLimit(%game, %team)
	Line 485: function MfDGame::onGameScoreLimit(%game)
	Line 495: function MfDGame::startGame(%game)
	Line 502: function MfDGame::endGame(%game)
	Line 532: function MfDGame::clearClientVaribles(%game, %client)
	Line 545: function MfDGame::pushChooseTeamMenu(%game, %client)
	Line 552: function MfDGame::pushChooseSpawnMenu(%game, %client)
	Line 558: function MfDGame::clientChooseSpawn(%game, %client, %option, %value)
\scripts\server\gametypes\RtFGame.cs (33 hits)
	Line 33:    function Flag::initializeObjective(%data, %flag)
	Line 35:       // This function is called after the mission file is executed.
	Line 46: function RtFGame::setupGameParams(%game)
	Line 65: function RtFGame::onMissionLoaded(%game)
	Line 75: function RtFGame::setUpTeams(%game)
	Line 128: function RtFGame::getTeamName(%game, %team)
	Line 136: function RtFGame::onClientEnterGame(%game, %client)
	Line 162: function RtFGame::onClientLeaveGame(%game, %client)
	Line 171: function RtFGame::assignClientTeam(%game, %client, %respawn)
	Line 208: function RtFGame::clientJoinTeam(%game, %client, %team, %respawn)
	Line 233: function RtFGame::pushChooseTeamMenu(%game, %client)
	Line 243: function RtFGame::createPlayer(%game, %client, %spawnPoint, %respawn)
	Line 253: function RtFGame::onDeath(%game, %player, %client, %sourceObject, %sourceClient, %damageType, %damLoc)
	Line 288: function RtFGame::updateScore(%game, %cl)
	Line 316: function RtFGame::awardScoreCarrierKill(%game, %client)
	Line 325: function RtFGame::onTouchFlag(%game, %player, %flag)
	Line 353: function RtFGame::onFlagDropped(%game, %player, %flag)
	Line 371: function RtFGame::flagReturnFade(%game, %flag, %dropped)
	Line 373:    // Cancel our call to this function if it is still pending
	Line 384: function RtFGame::resetFlag(%game, %flag, %dropped)
	Line 386:    // Cancel our call to this function if it is still pending
	Line 431: function RtFGame::resetFlagTossWait(%game, %player)
	Line 438: function RtFGame::onEnterTrigger(%game, %data, %trigger, %colObj)
	Line 451: function RtFGame::onFlagStandCollision(%game, %stand, %player)
	Line 470: function RtFGame::onLeaveMissionArea(%game, %player)
	Line 517: function RtFGame::onEnterMissionArea(%game, %player)
	Line 524: function RtFGame::checkScoreLimit(%game, %team)
	Line 537: function RtFGame::onGameScoreLimit(%game)
	Line 547: function RtFGame::endGame(%game)
	Line 583: function RtFGame::clearClientVaribles(%game, %client)
	Line 592: function RtFGame::pushChooseTeamMenu(%game, %client)
	Line 599: function RtFGame::pushChooseSpawnMenu(%game, %client)
	Line 605: function DnHGame::clientChooseSpawn(%game, %client, %option, %value)
\scripts\server\gametypes\TDMGame.cs (19 hits)
	Line 32:    function TDMdummy()
	Line 38: function TDMGame::setupGameParams(%game)
	Line 49: function TDMGame::onMissionLoaded(%game)
	Line 60: function TDMGame::setUpTeams(%game)
	Line 111: function TDMGame::getTeamName(%game, %team)
	Line 116: function TDMGame::onClientEnterGame(%game, %client)
	Line 137: function TDMGame::onClientLeaveGame(%game, %client)
	Line 148: function TDMGame::assignClientTeam(%game, %client, %respawn)
	Line 184: function TDMGame::clientJoinTeam(%game, %client, %team, %respawn)
	Line 210: function TDMGame::onDeath(%game, %player, %client, %sourceObject, %sourceClient, %damageType, %damLoc)
	Line 239: function TDMGame::updateScore(%game, %cl)
	Line 257: function TDMGame::getScoreLimit(%game)
	Line 276: function TDMGame::checkScoreLimit(%game, %team)
	Line 293: function TDMGame::onGameScoreLimit(%game)
	Line 303: function TDMGame::endGame(%game)
	Line 333: function TDMGame::clearClientVaribles(%game, %client)
	Line 339: function TDMGame::pushChooseTeamMenu(%game, %client)
	Line 346: function TDMGame::pushChooseSpawnMenu(%game, %client)
	Line 352: function TDMGame::clientChooseSpawn(%game, %client, %option, %value)
\scripts\server\grenades\grenade.cs (4 hits)
	Line 167: function GrenadeAmmo::onInventory(%data, %obj, %amount)
	Line 189: function GrenadeThrown::onCollision( %data, %obj, %col )
	Line 194: function GrenadeThrown::detonate(%data, %gren)
	Line 202: function GrenadeThrown::onDestroyed(%data, %obj, %prevState)
\scripts\server\grenades\proximityMine.cs (12 hits)
	Line 191: function MineDeployed::detonate(%data, %gren)
	Line 196: function ProxMine::onInventory(%data, %player, %amount)
	Line 210: function ProxMineImage::onThrowGrenade(%data, %obj, %slot)
	Line 304: function MineDeployed::onDeploy(%data, %mine, %player)
	Line 338: function MineDeployed::initMine(%data, %mine, %player)
	Line 356: function MineDeployed::ArmMine(%data, %mine, %player)
	Line 361: function MineDeployed::CheckVicinity(%data, %mine)
	Line 386: function MineDeployed::onCollision(%data, %mine, %col)
	Line 408: function explodeMine(%mine, %noDamage)
	Line 415: function MineDeployed::damage(%data, %mine, %sourceObject, %position, %amount, %damageType)
	Line 419:    // This function is called AFTER ::onDestroyed if it is struck
	Line 434: function MineDeployed::onDestroyed(%data, %mine, %prevState)
\scripts\server\grenades\smokeGrenade.cs (4 hits)
	Line 252: function SmokeGrenadeAmmo::onInventory(%data, %obj, %amount)
	Line 274: function SmokeGrenadeThrown::onCollision( %data, %obj, %col )
	Line 279: function SmokeGrenadeThrown::detonate(%data, %gren)
	Line 287: function SmokeGrenadeThrown::onDestroyed(%data, %obj, %prevState)
\scripts\server\grenades\timeBomb.cs (6 hits)
	Line 146: function serverCmdsetBombTimer(%client, %time)
	Line 162: function TimeBombImage::onThrowGrenade(%data, %obj, %slot)
	Line 181: function TimeBombAmmo::onInventory(%data, %obj, %amount)
	Line 203: function TimeBombThrown::onCollision( %data, %obj, %col )
	Line 208: function TimeBombThrown::detonate(%data, %gren)
	Line 220: function TimeBombThrown::onDestroyed(%data, %obj, %prevState)
\scripts\server\inventory.cs (10 hits)
	Line 23: function serverCmdShowArmoryHud(%client)
	Line 32: function serverCmdHideArmoryHud(%client)
	Line 37: function SMS::updateArmoryHud(%this, %client)
	Line 252: function serverCmdSetClientLoadout(%client, %list)
	Line 327: function SMS::validateInventory(%this, %client, %text)
	Line 360: function SMS::SetDefaultInventory(%this, %client)
	Line 367: function SMS::CreateInvBanCount(%this)
	Line 404: function SMS::ProcessLoadout(%this, %client)
	Line 513: function SMS::ReplenishLoadoutAmmo(%this, %player)
	Line 537: function listInventoryArrays()
\scripts\server\items\ammoBox.cs (2 hits)
	Line 35: function AmmoBox::onCollision(%data, %obj, %col)
	Line 97: function ShapeBase::tossAmmoCrate(%this)
\scripts\server\items\armoryCrate.cs (1 hit)
	Line 54: function ArmoryCrate::onCollision(%data, %obj, %col)
\scripts\server\items\flag.cs (8 hits)
	Line 98: function Flag::onAdd(%this, %obj)
	Line 105: function Flag::onCollision(%data, %flag, %col, %vec, %speed)
	Line 116: function Flag::onEnterLiquid(%data, %flag, %coverage, %type)
	Line 124: function FlagImage::chargeStart(%data, %obj, %slot)
	Line 130: function FlagImage::onActivate(%data, %obj, %slot)
	Line 152:    // Function reside in shapebase.cs
	Line 163: function FlagImage::onMount(%data, %obj, %slot)
	Line 168: function FlagImage::onUnmount(%data, %obj, %slot)
\scripts\server\items\healthKit.cs (2 hits)
	Line 54: function HealthKit::onAdd(%this, %obj)
	Line 61: function HealthKit::onUse(%this, %player)
\scripts\server\items\healthPatch.cs (3 hits)
	Line 71: function HealthPatch::onAdd(%this, %obj)
	Line 78: function HealthPatch::onCollision(%this, %obj, %col, %vec, %speed)
	Line 124: function ShapeBase::tossPatch(%this)
\scripts\server\items\item.cs (9 hits)
	Line 44: function Item::respawn(%this)
	Line 57: function Item::schedulePop(%this)
	Line 66: function ItemData::onEnterLiquid(%data, %obj, %coverage, %type)
	Line 93: function ItemData::onLeaveLiquid(%data, %obj, %type)
	Line 101: function ItemData::onInventory(%data, %obj, %amount)
	Line 195: function ItemData::onUse(%data, %obj)
	Line 226: function ItemData::onCollision(%data, %obj, %col, %vec, %speed)
	Line 350: function ItemData::create(%data)
	Line 471: function placeRandomItem(%data, %num, %spacing, %radius, %startPos)
\scripts\server\items\torque.cs (2 hits)
	Line 35: function Logo::onCollision(%data, %obj, %col, %vec, %speed)
	Line 52: function Logo::onCollision(%data, %obj, %col, %vec, %speed)
\scripts\server\kickban.cs (6 hits)
	Line 25: function kick( %client, %admin )
	Line 35: function ban( %client, %admin )
	Line 49: function GameConnection::addToServerBanList( %client, %guid )
	Line 70: function GameConnection::removeFromServerBanList( %client, %guid )
	Line 88: function GameConnection::isOnServerBanList( %client, %guid )
	Line 106: function exportBanList()
\scripts\server\library.cs (89 hits)
	Line 63: //this function serves a similar purpose to vectorScale, except instead of scaling it
	Line 65: function setVectorLength(%vec, %desiredLength)
	Line 82: function posFromRaycast(%transform)
	Line 89: function normalFromRaycast(%transform)
	Line 98: function posFromTransform(%transform)
	Line 105: function rotFromTransform(%transform)
	Line 113: function SceneObject::posFromTransform(%obj, %transform)
	Line 122: function SceneObject::rotFromTransform(%obj, %transform)
	Line 132: function bumpZ(%pos, %heightMod)
	Line 141: //this function merely zeroes the z of a pos, not used anymore
	Line 142: function gimpPosition(%pos)
	Line 147: function getAngleDifferance(%angleOne, %angleTwo)
	Line 165: function getClosestCompassTick(%angle)
	Line 191: function getClosestCardinal(%angle)
	Line 214: function invertDegAngle(%angle)
	Line 224: function invertAngle(%angle)
	Line 233: function getAnglefromRot(%rot)
	Line 241: function getDegAnglefromRot(%rot)
	Line 249: function getZangle(%posOne, %posTwo)
	Line 265: function absRot(%rot)
	Line 272: function adjustRot(%rot, %rotAdjust)
	Line 290: // This lil function generates the rotation required for an object at PosOne to point at PosTwo (z rot only)
	Line 291: function pointToXYPos(%posOne, %posTwo)
	Line 315: // And this lil function generates the rotation required for an object at posOne to
	Line 317: function pointToPos(%posOne, %posTwo)
	Line 349: //new function by Founder (Martin Hoover)
	Line 352: function setPointAtPos(%obj, %posTwo)
	Line 393: function getXYAngle(%posOne, %posTwo)
	Line 413: function getXYangleFromRot(%rot)
	Line 427: function getZrise(%rot, %posOne, %posTwo)
	Line 460: function get2PointLineValue(%point1, %point2, %t)
	Line 466: function get3PointCurveValue(%point1, %point2, %point3, %t)
	Line 475: function get4PointCurveValue(%point1, %point2, %point3, %point4, %t)
	Line 490: function findNearestTerrainPoint(%pos)
	Line 499: function findGridPoint(%axis)
	Line 520: function getTerrainSurfacePoint(%pos)
	Line 529: function getAverageTerrainHeight(%minX, %maxX, %minY, %maxY, %squareSize)
	Line 545: function getTerrainAngle(%point)
	Line 552: function getTerrainLevel(%pos, %rad)
	Line 584: function SceneObject::setOnTerrain(%obj, %pos, %calcOnly)
	Line 620: //	%calc will have the function return the calculated transform instead of actually moving
	Line 650: function SceneObject::alignTransforms(%obj, %pos, %rot, %rotAdjust, %xAngle, %yRadius, %zMod, %invert, %calc)
	Line 728: function SceneObject::alignGroupRot(%obj, %pos, %rot, %rotAdjust, %xAngle, %yRadius, %zMod, %invert, %calc)
	Line 771: function SceneObject::StartMoveObject(%obj, %endpos, %time, %smoothness, %delay)
	Line 790: function SceneObject::MoveObject(%obj, %startpos, %endpos, %numsteps, %numstepsleft, %stepvec, %currpos, %interval)
	Line 803: function getObjectTypeMask(%obj)
	Line 858: function SceneObject::applyKickback(%obj, %kick)
	Line 866: function SceneObject::applyKick(%obj, %amt, %velCap, %dir)
	Line 887: function SceneObject::repulse(%obj, %col)
	Line 911: function SceneObject::getVectorFromTransform(%obj, %transform, %vector)
	Line 941: function stripTaggedVar(%var)
	Line 952: function getBoxMinX(%box){ return getWord(%box, 0); }
	Line 953: function getBoxMinY(%box){ return getWord(%box, 1); }
	Line 954: function getBoxMinZ(%box){ return getWord(%box, 2); }
	Line 955: function getBoxMaxX(%box){ return getWord(%box, 3); }
	Line 956: function getBoxMaxY(%box){ return getWord(%box, 4); }
	Line 957: function getBoxMaxZ(%box){ return getWord(%box, 5); }
	Line 959: function SceneObject::getWorldBoxMin(%obj)
	Line 966: function SceneObject::getWorldBoxMax(%obj)
	Line 973: function SceneObject::getWorldBoxMinX(%obj) { return getWord(%obj.getWorldBoxMin(), 0); }
	Line 974: function SceneObject::getWorldBoxMinY(%obj) { return getWord(%obj.getWorldBoxMin(), 1); }
	Line 975: function SceneObject::getWorldBoxMinZ(%obj) { return getWord(%obj.getWorldBoxMin(), 2); }
	Line 976: function SceneObject::getWorldBoxMaxX(%obj) { return getWord(%obj.getWorldBoxMax(), 0); }
	Line 977: function SceneObject::getWorldBoxMaxY(%obj) { return getWord(%obj.getWorldBoxMax(), 1); }
	Line 978: function SceneObject::getWorldBoxMaxZ(%obj) { return getWord(%obj.getWorldBoxMax(), 2); }
	Line 982: function SceneObject::GetBoxWidth(%obj)
	Line 988: function SceneObject::GetBoxLength(%obj)
	Line 994: function SceneObject::GetBoxHeight(%obj)
	Line 1000: function SceneObject::GetBoxCenter(%obj)
	Line 1013: function SceneObject::GetHeightOffset(%obj)
	Line 1022: function getValidSpawnSurface(%pos, %radius)
	Line 1059: //a lil function to mark a position with an object and a default object to use as marker
	Line 1068: function markPoint(%pos, %rot, %block, %type, %name)
	Line 1084: function markPointArray(%array)
	Line 1099: function isCleanNumber(%string)
	Line 1136: //this function takes a pathed filename (common/missions/blah.mis) and takes out everything excpet the name (blah)
	Line 1137: function cropToName(%filePAth)
	Line 1166: function cropDecimal(%num)
	Line 1185: function messageTest()
	Line 1194: function dec2hex(%val)
	Line 1211: function chrValue(%chr)
	Line 1240: function URLEncode(%rawString)
	Line 1283: function ShapeBase::doRaycast(%this, %range, %mask)
	Line 1307: function loadDatablockFiles( %datablockFiles, %recurse )
	Line 1329: function recursiveLoadDatablockFiles( %datablockFiles, %previousErrors )
	Line 1389: function ListDatablocks()
	Line 1404: function stripFields(%this)
	Line 1429: function findNextGridPoint(%axis)
	Line 1456: function generateGridPointArray(%multi)
\scripts\server\markers.cs (1 hit)
	Line 55: function MissionMarkerData::create(%block)
\scripts\server\message.cs (15 hits)
	Line 10: function messageClient(%client, %msgType, %msgString, %a1, %a2, %a3, %a4, %a5, %a6, %a7, %a8, %a9, %a10, %a11, %a12, %a13)
	Line 16: function messageTeam(%team, %msgType, %msgString, %a1, %a2, %a3, %a4, %a5, %a6, %a7, %a8, %a9, %a10, %a11, %a12, %a13)
	Line 27: function messageTeamExcept(%client, %msgType, %msgString, %a1, %a2, %a3, %a4, %a5, %a6, %a7, %a8, %a9, %a10, %a11, %a12, %a13)
	Line 39: function messageAll(%msgType, %msgString, %a1, %a2, %a3, %a4, %a5, %a6, %a7, %a8, %a9, %a10, %a11, %a12, %a13)
	Line 49: function messageAllExcept(%client, %team, %msgtype, %msgString, %a1, %a2, %a3, %a4, %a5, %a6, %a7, %a8, %a9, %a10, %a11, %a12, %a13)
	Line 73: function GameConnection::spamMessageTimeout(%this)
	Line 79: function GameConnection::spamReset(%this)
	Line 84: function spamAlert(%client)
	Line 110: function chatMessageClient( %client, %sender, %voiceTag, %voicePitch, %msgString, %a1, %a2, %a3, %a4, %a5, %a6, %a7, %a8, %a9, %a10 )
	Line 117: function chatMessageTeam( %sender, %team, %msgString, %a1, %a2, %a3, %a4, %a5, %a6, %a7, %a8, %a9, %a10 )
	Line 135: function chatMessageAll( %sender, %msgString, %a1, %a2, %a3, %a4, %a5, %a6, %a7, %a8, %a9, %a10 )
	Line 163: function serverCmdTeamMessageSent(%client, %text)
	Line 192: function serverCmdMessageSent(%client, %text)
	Line 221: function serverCmdPrivateMessageSent(%client, %target, %text)
	Line 251: function filterChat(%string)
\scripts\server\missionDownload.cs (5 hits)
	Line 35: // The server invokes the client MissionStartPhase[1-3] function to request
	Line 39: function serverCmdMissionStartPhase1Ack(%client, %seq)
	Line 57: function serverCmdMissionStartPhase2Ack(%client, %seq, %playerDB)
	Line 78: function serverCmdMissionStartPhase3Ack(%client, %seq)
	Line 92:    // AiClient is setup in function Torque::loadMissionStage2()
\scripts\server\missionInfo.cs (3 hits)
	Line 17: function clearLoadInfo()
	Line 31: function buildLoadInfo(%mission, %missionType)
	Line 57: function sendLoadInfoToClient(%client)
\scripts\server\missionLoad.cs (13 hits)
	Line 33: function Torque::loadMission(%this, %missionFile, %missionType, %isFirstMission)
	Line 100: function Torque::loadMissionStage2(%this, %missionFile, %missionType, %isFirstMission) 
	Line 233: function Torque::endMission(%this)
	Line 286: function SimGroup::setupGameType(%this, %type)
	Line 292: function SimObject::setupGameType(%this, %type)
	Line 297: function ShapeBase::setupGameType(%this, %type)
	Line 310: function TSStatic::setupGameType(%this, %type)
	Line 322: function Trigger::setupGameType(%this, %type)
	Line 334: function ParticleEmitterNode::setupGameType(%this, %type)
	Line 346: function SimGroup::initializeObjective(%this)
	Line 352: function GameBase::initializeObjective(%this)
	Line 358: function SimGroup::activatePhysicalZones(%this)
	Line 373: function SimGroup::deactivatePhysicalZones(%this)
\scripts\server\player.cs (47 hits)
	Line 1078: function checkUnderwater(%obj)
	Line 1127: function sendMsgClientKilled_Drowning(%msgType, %client, %sourceClient, %damLoc)
	Line 1136: function Armor::onAdd(%this, %obj)
	Line 1182: function Armor::onRemove(%this, %obj)
	Line 1188: function Armor::onNewDataBlock(%this, %obj)
	Line 1197: function Armor::onMount(%this, %obj, %vehicle, %node)
	Line 1234: function Armor::onUnmount(%this, %obj, %vehicle, %node)
	Line 1254: function Armor::doDismount(%this, %obj, %forced)
	Line 1258:    // This function is called by player.cc when the jump trigger is true while mounted
	Line 1335: function Armor::onCollision(%this, %obj, %col)
	Line 1338:    // This function would be used for player to player collisions only.
	Line 1391: function Armor::onImpact(%this, %obj, %collidedObject, %vec, %vecLen)
	Line 1402: function Armor::damage(%this, %obj, %source, %position, %amount, %damageType)
	Line 1519: function Armor::onDamage(%this, %obj, %delta)
	Line 1551: function Armor::onDisabled(%this, %player, %state)
	Line 1653: function Armor::onDestroyed(%this, %player, %lastState)
	Line 1658: function Armor::applyConcussion(%data, %player)
	Line 1675: function Armor::onLeaveMissionArea(%this, %obj)
	Line 1688: function Armor::onEnterMissionArea(%this, %obj)
	Line 1702: function Armor::onEnterLiquid(%this, %obj, %coverage, %type)
	Line 1728: function Armor::onLeaveLiquid(%this, %obj, %type)
	Line 1736: function echoTriggers()
	Line 1747: function Armor::onTrigger(%this, %player, %triggerNum, %val)
	Line 1780: function Armor::onForceUncloak(%this, %obj, %reason)
	Line 1800: function Armor::onPoseChange(%this, %obj, %oldPose, %newPose)
	Line 1808: function Armor::onStartSwim(%this, %obj)
	Line 1813: function Armor::onStopSwim(%this, %obj)
	Line 1818: function Armor::onStartSprintMotion(%this, %obj)
	Line 1823: function Armor::onStopSprintMotion(%this, %obj)
	Line 1828: function Armor::animationDone(%this, %obj)
	Line 1838: function Player::kill(%player, %damageType)
	Line 1869: function Player::causedTeamDamage(%this, %val)
	Line 1874: function Player::setRespawnCloakOff(%player)
	Line 1880: function Player::setInvincible(%player, %val)
	Line 1888: function Player::resetVpurchase(%player)
	Line 1893: function Player::mountVehicles(%this, %bool)
	Line 1899: function Player::isPilot(%this)
	Line 1916: function Player::playDeathAnimation(%this)
	Line 1935: function Player::playCelAnimation(%this, %anim)
	Line 1943: function Player::playDeathCry(%this)
	Line 1948: function Player::playPain(%this)
	Line 1955: function Player::setDamageDirection(%player, %sourceObject, %damagePos)
	Line 2000: function Player::use(%player, %data)
	Line 2009: function Player::setArmor(%player, %armor)
	Line 2016: function getDamagePercent(%maxDmg, %dmgLvl)
	Line 2022: function Player::unDeployObject(%player)
	Line 2100: function Player::progressMeter(%this, %time, %text)
\scripts\server\power.cs (18 hits)
	Line 49: function GameBase::clearPower(%this)
	Line 54: function SimGroup::clearPower(%this)
	Line 65: function SimObject::powerInit(%this, %powerCount)
	Line 70: function SimGroup::powerInit(%this, %powerCount)
	Line 93: function GameBase::powerInit(%this, %powerCount)
	Line 101: function SimObject::isPowering(%data, %obj)
	Line 106: function SimObject::updatePowerCount()
	Line 111: function SimObject::powerCheck()
	Line 116: function SimGroup::updatePowerCount(%this, %value)
	Line 130: function GameBaseData::gainPower(%data, %obj)
	Line 135: function GameBaseData::losePower(%data, %obj)
	Line 140: function InteriorInstance::powerCheck(%this, %powerCount)
	Line 150: function GameBase::powerCheck(%this, %powerCount)
	Line 158: function GameBase::incPowerCount(%this)
	Line 163: function GameBase::decPowerCount(%this)
	Line 168: function GameBase::setSelfPowered(%this)
	Line 182: function GameBase::clearSelfPowered(%this)
	Line 189: function GameBase::isPowered(%this)
\scripts\server\radiusDamage.cs (6 hits)
	Line 23: function ProjectileData::onCollision(%data, %proj, %col, %fade, %pos, %normal)
	Line 38: function ProjectileData::onExplode(%data, %proj, %position, %mod)
	Line 48: function ProjectileData::onRemove(%data, %proj)
	Line 53: // Support function which applies damage to objects within the radius of
	Line 54: // some effect, usually an explosion.  This function will also optionally 
	Line 56: function radiusDamage(%source, %sourceParent, %position, %radius, %damage, %damageType, %impulse)
\scripts\server\rigidshapes\barrels.cs (1 hit)
	Line 118: function Barrel::onDestroyed(%data, %obj, %prevState)
\scripts\server\rigidshapes\crates.cs (1 hit)
	Line 118: function Crate::onDestroyed(%data, %obj, %prevState)
\scripts\server\rigidshapes\rigidShape.cs (9 hits)
	Line 24: function RigidShapeData::create(%data)
	Line 35: function RigidShapeData::onAdd(%data, %obj)
	Line 42: function RigidShapeData::onNewDataBlock(%data, %obj)
	Line 47: function RigidShapeData::damage(%data, %obj, %sourceObject, %position, %amount, %damageType)
	Line 88: function RigidShapeData::onDamage(%data, %obj)
	Line 121: function RigidShapeData::onEnabled(%data, %obj, %state)
	Line 130: function RigidShapeData::onDisabled(%data, %obj, %state)
	Line 135: function RigidShapeData::onDestroyed(%data, %obj, %prevState)
	Line 144: function RigidShapeData::onCollision(%data, %obj, %col, %vec, %speed)
\scripts\server\server.cs (12 hits)
	Line 23: function Torque::initServer(%this)
	Line 58: function Torque::initDedicated(%this)
	Line 91: function portInit(%port)
	Line 105: function createAndConnectToLocalServer( %serverType, %level, %missionType )
	Line 130: function Torque::createServer(%this, %serverType, %level, %missionType)
	Line 319: function Torque::destroyServer(%this)
	Line 373: function resetServerDefaults()
	Line 391: function addToServerGuidList( %guid )
	Line 402: function removeFromServerGuidList( %guid )
	Line 417: /// When the server is queried for information, the value of this function is
	Line 420: function onServerInfoQuery()
	Line 425: function listClients()
\scripts\server\shapeBase.cs (39 hits)
	Line 7: function ShapeBase::throw( %this, %data )
	Line 28: function ShapeBase::throwItem( %this, %data )
	Line 53: function ShapeBase::throwObject( %this, %obj )
	Line 115: function ShapeBase::use(%player, %data)
	Line 146: function ShapeBase::hasInventory(%this, %data)
	Line 155: function ShapeBase::maxInventory(%this, %data)
	Line 166: function ShapeBase::incInventory(%this, %data, %amount)
	Line 190: function ShapeBase::decInventory(%this, %data, %amount)
	Line 212: function ShapeBase::setInventory(%this, %data, %value, %force)
	Line 288: function ShapeBase::getInventory(%this, %data)
	Line 296: function ShapeBase::hasAmmo(%this, %item)
	Line 307: function ShapeBase::clearInventory(%this)
	Line 330: function serverCmdGiveAll(%client)
	Line 352: function ShapeBaseData::onUse(%this, %user)
	Line 359: function ShapeBaseData::onThrow(%this, %user, %amount)
	Line 369: function ShapeBaseData::onPickup(%this, %obj, %user, %amount)
	Line 380: function ShapeBaseData::onInventory(%this, %user, %value)
	Line 390: function ShapeBase::damage(%this, %source, %position, %damage, %damageType)
	Line 393:    // method. This function is provided to allow objects some chance of
	Line 404: // This is called by function ::damage. Used to remove energy when damage is inflicted instead
	Line 406: function ShapeBase::imposeShield(%obj, %position, %amount, %damageType)
	Line 431: function ShapeBase::setDamageDt(%this, %time, %damageAmount, %damageType)
	Line 435:    // This function is used to apply damage over time.
	Line 439: function ShapeBase::checkDamageDt(%this, %time, %damageAmount, %damageType)
	Line 450: function ShapeBase::clearDamageDt(%this)
	Line 457: function ShapeBase::dismountImage(%this, %slot)
	Line 474: function ShapeBase::setTeamId(%obj, %team)
	Line 482: function ShapeBase::getTeamId(%obj)
	Line 491: function ShapeBaseImageData::onActivate(%data, %obj, %slot)
	Line 497: function ShapeBaseImageData::onDeactivate(%data, %obj, %slot)
	Line 502: function ShapeBaseImageData::onMount(%data, %obj, %slot)
	Line 507: function ShapeBaseImageData::onUnmount(%data, %obj, %slot)
	Line 516: function ShapeBaseImageData::onDeconstruct(%data, %obj, %slot)
	Line 525: function ShapeBaseImageData::onFire(%data, %obj, %slot)
	Line 618: function Projectile::mountPointLight(%this, %radius, %flare, %anim, %animtype, %shdw, %shdwtype)
	Line 661: function ShapeBaseImageData::onAltFire(%data, %obj, %slot)
	Line 670: function ShapeBaseImageData::chargeStart(%data, %obj, %slot)
	Line 682: function ShapeBaseImageData::onThrowGrenade(%data, %obj, %slot)
	Line 759: function GrenadeImage::onDryFire(%this, %obj, %slot)
\scripts\server\sms.cs (21 hits)
	Line 48: function SMS::AllowWeapon( %this, %list )
	Line 58: function SMS::AllowAmmo( %this, %list )
	Line 73: function SMS::AllowClip( %this, %list )
	Line 88: function SMS::AllowItem( %this, %list )
	Line 104: function SMS::AllowGrenade( %this, %list )
	Line 114: //function SMS::AllowGrenade( %this, %list )
	Line 129: function SMS::AllowMine( %this, %list )
	Line 148: function SMS::AddArmor(%this, %armor, %invName, %index) 
	Line 159: function SMS::AddWeapon( %this, %weapon, %invName, %invShow )
	Line 172: function SMS::AddAmmo( %this, %ammoName, %increment )
	Line 180: function SMS::AddClip( %this, %clip, %invName, %increment )
	Line 193: function SMS::AddItem( %this, %item, %invName, %increment )
	Line 206: function SMS::AddGrenade( %this, %grenade, %invName )
	Line 218: function SMS::AddMine( %this, %mine, %invName, %increment )
	Line 231: function SMS::AddVehicle( %this, %vehicle, %invName, %limit )
	Line 245: function SMS::SetupMaxWeapons( %this )
	Line 259: function SMS::SetupMaxAmmos( %this )
	Line 273: function SMS::SetupMaxClips( %this )
	Line 287: function SMS::SetupMaxItems( %this )
	Line 301: function SMS::SetupMaxGrenades( %this )
	Line 315: function SMS::SetupMaxMines( %this )
\scripts\server\specials\firstAidPack.cs (4 hits)
	Line 88: function FirstAidPackImage::onMount(%data, %obj, %slot)
	Line 92: function FirstAidPackImage::onUnmount(%data, %obj, %slot)
	Line 97: function FirstAidPackImage::onActivate(%data, %obj, %slot)
	Line 121: function FirstAidPackImage::onDeactivate(%data, %obj, %slot)
\scripts\server\specials\munitionsPack.cs (4 hits)
	Line 89: function MunitionsPackImage::onMount(%data, %obj, %slot)
	Line 93: function MunitionsPackImage::onUnmount(%data, %obj, %slot)
	Line 98: function MunitionsPackImage::onActivate(%data, %obj, %slot)
	Line 129: function MunitionsPackImage::onDeactivate(%data, %obj, %slot)
\scripts\server\specials\shapeCharge.cs (10 hits)
	Line 153: function ShapeChargeImage::onUnmount(%data, %obj, %slot)
	Line 166: function ShapeChargeImage::onActivate(%data, %obj, %slot)
	Line 215: function ShapeChargeImage::onDeactivate(%data, %obj, %slot)
	Line 227: function ShapeChargeTossed::onCollision(%data, %obj, %col)
	Line 241: function ShapeChargeTossed::checkVelocity(%data, %item)
	Line 272: function ShapeChargeTossed::onStickyCollision(%data, %item)
	Line 288: function ShapeChargeTossed::activateCharge(%data, %item, %pos, %rot)
	Line 321: function armShapeCharge(%item)
	Line 328: function ShapeChargeDeployed::detonate(%data, %item, %player)
	Line 341: function ShapeChargeDeployed::onDestroyed(%data, %obj, %prevState)
\scripts\server\specials\towerMarker.cs (8 hits)
	Line 87: function FusionTowerImage::onActivate(%data, %obj, %slot)
	Line 94: function FusionTowerImage::onDeactivate(%data, %obj, %slot)
	Line 99: function FusionTowerImage::onUnmount(%data, %obj, %slot)
	Line 105: function FusionTowerImage::testVerticleObstruction(%data, %player)
	Line 113: function FusionTowerImage::testObjectInterference(%data, %pos)
	Line 130: function FusionTowerImage::testNoTerrainFound(%data, %surface)
	Line 135: function FusionTowerImage::displayErrorMsg(%data, %player, %slot, %error)
	Line 183: function FusionTowerImage::onDeploy(%data, %player, %slot)
\scripts\server\specials\turretPack.cs (6 hits)
	Line 127: function TurretDeployableImage::onDeactivate(%data, %obj, %slot)
	Line 139: function TurretDeployableImage::onUnmount(%data, %obj, %slot)
	Line 144: function TurretDeployableImage::onActivate(%data, %obj, %slot)
	Line 157: function TurretDeployableImage::onActivateDone(%data, %obj, %slot)
	Line 178: function ShapeBase::throwTurret( %this, %data )
	Line 195: function DeployedTurret::onThrow(%data, %user)
\scripts\server\specials\vehiclePack.cs (8 hits)
	Line 92: function VehiclePackImage::testMaxDeployed(%data, %player)
	Line 104: function ShapeBaseImageData::testObjectTooClose(%data, %surfacePt, %player)
	Line 109: function VehiclePackImage::testVerticleObstruction(%data, %player)
	Line 117: function VehiclePackImage::testObjectInterference(%data, %pos)
	Line 122: function VehiclePackImage::onActivate(%data, %obj, %slot)
	Line 128: function VehiclePackImage::onDeactivate(%data, %obj, %slot)
	Line 133: function VehiclePackImage::displayErrorMsg(%data, %player, %slot, %error)
	Line 178: function VehiclePackImage::onDeploy(%data, %obj, %slot)
\scripts\server\staticshapes\captureSwitch.cs (2 hits)
	Line 47: function CaptureSwitch::objectiveInit(%data, %obj)
	Line 59: function CaptureSwitch::onCollision(%data, %obj, %colObj)
\scripts\server\staticshapes\doors.cs (5 hits)
	Line 141: function Door::onAdd(%data, %obj)
	Line 147: function Door::onGainPowerEnabled(%data, %obj)
	Line 158: function Door::onLosePowerDisabled(%data, %obj)
	Line 170: function Door::onCollision(%data, %obj, %col)
	Line 198: function Door::close(%data, %obj, %col)
\scripts\server\staticshapes\flagstand.cs (2 hits)
	Line 42: function FlagStand::initializeObjective(%data, %obj)
	Line 93: function FlagStand::onCollision(%this, %obj, %col)
\scripts\server\staticshapes\staticShape.cs (13 hits)
	Line 22: function StaticShapeData::create(%data)
	Line 34: function StaticShapeData::onAdd(%data, %obj)
	Line 42: function StaticShapeData::damage(%data, %obj, %sourceObject, %position, %amount, %damageType)
	Line 84: function StaticShapeData::onDamage(%data, %obj)
	Line 123: function StaticShapeData::onEnabled(%data, %obj, %state)
	Line 137: function StaticShapeData::onDisabled(%data, %obj, %state)
	Line 148: function StaticShapeData::onDestroyed(%data, %obj, %prevState)
	Line 163: function StaticShapeData::onGainPowerEnabled(%data, %obj)
	Line 191: function StaticShapeData::onLosePowerDisabled(%data, %obj)
	Line 209: function StaticShapeData::gainPower(%data, %obj)
	Line 217: function StaticShapeData::losePower(%data, %obj)
	Line 228: function TSStatic::create(%shapeName)
	Line 237: function TSStatic::damage(%this)
\scripts\server\triggers.cs (14 hits)
	Line 60: function Trigger::initializeObjective(%this)
	Line 67: function SimGroup::onTrigger(%this, %triggerId, %on)
	Line 76: function SimGroup::onTriggerTick(%this, %triggerId)
	Line 85: function DefaultTrigger::onEnterTrigger(%this, %trigger, %obj)
	Line 94: function DefaultTrigger::onLeaveTrigger(%this, %trigger, %obj)
	Line 103: function DefaultTrigger::onTickTrigger(%this, %trigger)
	Line 119: function GameTrigger::onEnterTrigger(%this, %trigger, %colObj)
	Line 128: function GameTrigger::onLeaveTrigger(%this, %trigger, %colObj)
	Line 137: function GameTrigger::onTickTrigger(%this, %trigger)
	Line 147: function TriggerData::addPlayerToTrigger(%data, %trigger, %player)
	Line 164: function TriggerData::remPlayerFromTrigger(%data, %trigger, %player)
	Line 179: function TriggerData::isPlayerInTrigger(%data, %trigger, %player)
	Line 192: function DamageTrigger::onEnterTrigger(%this, %trigger, %colObj)
	Line 203: function DamageTrigger::onTickTrigger(%data, %trigger)
\scripts\server\turrets\sentryTurret.cs (1 hit)
	Line 232: function AITurretHeadImage::onFire(%data, %obj, %slot)
\scripts\server\turrets\turret.cs (30 hits)
	Line 92: function TurretShapeData::onAdd(%this, %obj)
	Line 132: function TurretShapeData::onRemove(%this, %obj)
	Line 151: function MissionGroup::respawnTurret(%this, %datablock, %className, %transform, %static, %respawn)
	Line 170: function TurretShapeData::damage(%this, %turret, %sourceObject, %position, %damage, %damageType)
	Line 216: function TurretShapeData::onDamage(%this, %obj, %delta)
	Line 257: function TurretShapeData::onDestroyed(%this, %obj, %lastState)
	Line 290: function TurretShapeData::onDisabled(%this, %obj, %lastState)
	Line 302: function TurretShapeData::onEnabled(%this, %obj, %lastState)
	Line 318: function TurretShapeData::isMountable(%this, %obj, %val)
	Line 323: function TurretShapeData::onMountObject(%this, %turret, %player, %node)
	Line 333: function TurretShapeData::onUnmountObject(%this, %turret, %player)
	Line 344: function TurretShapeData::mountPlayer(%this, %turret, %player)
	Line 357: function TurretShapeData::setMountTurret(%this, %turret, %player)
	Line 375: function TurretShapeData::playerMounted(%data, %turret, %player, %node)
	Line 395: function TurretShapeData::playerDismounted(%data, %turret, %player, %node)
	Line 405: function TurretShapeData::findEmptySeat(%this, %turret, %player)
	Line 418: function TurretShapeData::switchSeats(%this, %turret, %player)
	Line 432: function TurretShapeData::onMount(%this, %turret, %player, %node)
	Line 440: function TurretShapeData::onUnmount(%this, %turret, %player, %node)
	Line 452: function TurretShape::damage(%this, %sourceObject, %position, %damage, %damageType)
	Line 462: function AITurretShapeData::onNewDatablock(%this, %turret)
	Line 467: function AITurretShapeData::onAdd(%this, %turret)
	Line 493: function AITurretShapeData::onDestroyed(%this, %turret, %lastState)
	Line 522: function AITurretShapeData::onScanning(%this, %turret)
	Line 533: function AITurretShapeData::onTarget(%this, %turret)
	Line 543: function AITurretShapeData::onNoTarget(%this, %turret)
	Line 552: function AITurretShapeData::onFiring(%this, %turret)
	Line 561: function AITurretShapeData::onThrown(%this, %turret)
	Line 568: function AITurretShapeData::onDeploy(%this, %turret)
	Line 584: function TurretShape::scanForTargets(%turret)
\scripts\server\vehicles\cheetahCar.cs (7 hits)
	Line 293: function CheetahTurretImage::onFire(%data, %obj, %slot)
	Line 543: function CheetahCar::onAdd(%this, %obj)
	Line 636: function CheetahCar::onRemove(%this, %obj)
	Line 650: function CheetahCar::playerDismounted(%data, %obj, %player)
	Line 658: function serverCmdtoggleBrakeLights(%client)
	Line 679: function CheetahCar::onTrigger(%this, %obj, %index, %state)
	Line 691: function TurretImage::onMount(%this, %obj, %slot)
\scripts\server\vehicles\gravatron.cs (2 hits)
	Line 257: function Gravatron::playerMounted(%data, %obj, %player, %node)
	Line 265: function Gravatron::onTrigger(%data, %obj, %trigger, %state)
\scripts\server\vehicles\talonFighter.cs (5 hits)
	Line 183: function Talon::playerMounted(%data, %obj, %player, %node)
	Line 192: function Talon::onAdd(%this, %obj)
	Line 208: function Talon::playerDismounted(%data, %obj, %player)
	Line 218: function Talon::onTrigger(%data, %obj, %trigger, %state)
	Line 259: function Talon::fireNextGun(%this, %obj)
\scripts\server\vehicles\vehicle.cs (36 hits)
	Line 23: function WheeledVehicleData::create(%block, %team, %marker)
	Line 53: function FlyingVehicleData::create(%block, %team, %marker)
	Line 85: function HoverVehicleData::create(%block, %team, %marker)
	Line 117: function VehicleData::onNewDataBlock(%data, %obj)
	Line 123: function VehicleData::onAdd(%data, %obj)
	Line 150: function VehicleData::onRemove(%data, %obj)
	Line 165: function VehicleData::hasDismountOverrides(%data, %obj)
	Line 170: function VehicleData::onCollision(%data, %vehicle, %col, %vec, %speed)
	Line 196: function VehicleData::onImpact(%data, %obj, %col, %vec, %vecLen)
	Line 210: function VehicleData::onFlipped(%this, %vehicle, %flipped)
	Line 218: function VehicleData::damage(%data, %obj, %sourceObject, %position, %damage, %damageType)
	Line 244: function VehicleData::onDamage(%this, %obj)
	Line 273: function VehicleData::onDisabled(%data, %obj, %state)
	Line 279: function VehicleData::onDestroyed(%data, %obj, %prevState)
	Line 309: function VehicleData::onTrigger(%this, %obj, %trigger, %val)
	Line 316: function VehicleData::onEnterLiquid(%data, %obj, %coverage, %type)
	Line 346: function VehicleData::onLeaveLiquid(%data, %obj, %type)
	Line 352: function VehicleData::onLeaveMissionArea(%this, %vehicle)
	Line 370: function VehicleData::onEnterMissionArea(%this, %vehicle)
	Line 388: function VehicleData::playerMounted(%data, %vehicle, %player, %node)
	Line 407: function VehicleData::playerDismounted(%data, %obj, %player)
	Line 414: function VehicleData::checkIfPlayersMounted(%data, %obj)
	Line 426: function SimGroup::setupPositionMarkers(%group, %create)
	Line 449: function VehicleData::createPositionMarker(%data, %vehicle)
	Line 470: function VehicleData::respawn(%data, %marker)
	Line 489: function abandonTimeOut(%vehicle)
	Line 527: function VehicleData::isMountable(%data, %obj, %val)
	Line 532: function VehicleData::mountPlayer(%data, %vehicle, %player)
	Line 542: function VehicleData::setMountVehicle(%data, %player, %vehicle)
	Line 559: function VehicleData::findEmptySeat(%data, %vehicle, %player)
	Line 573: function VehicleData::switchSeats(%data, %vehicle, %player)
	Line 592: function serverCmdSwitchVehicleWeapon(%client, %dir)
	Line 620: function serverCmdMountVehicle(%client)
	Line 718: function serverCmdUpRightVehicle(%client)
	Line 728: function serverCmdSelectVehicle(%client, %vehicle)
	Line 740: function serverCmdCreateVehicle(%client, %vehicle)
\scripts\server\weapon.cs (13 hits)
	Line 89: function Weapon::onUse(%data, %obj)
	Line 137: function Weapon::onPickup(%this, %obj, %shape, %amount)
	Line 150: function Weapon::incCatagory(%data, %obj)
	Line 157: function Weapon::decCatagory(%data, %obj)
	Line 168: function WeaponImage::onMount(%this, %obj, %slot)
	Line 224: function WeaponImage::onUnmount(%this, %obj, %slot)
	Line 245: function GrenadeImage::onMount(%data, %player, %slot)
	Line 263: function GrenadeImage::onUnmount(%data, %player, %slot)
	Line 276: function WeaponImage::onClipEmpty(%this, %obj, %slot)
	Line 285: function WeaponImage::reloadAmmoClip(%this, %obj, %slot)
	Line 314: function WeaponImage::clearAmmoClip( %this, %obj, %slot )
	Line 332: function WeaponImage::stashSpareAmmo( %this, %player )
	Line 367: function AmmoClip::onPickup(%this, %obj, %shape, %amount)
\scripts\server\weapons\deployedTurret.cs (5 hits)
	Line 204: function TurretDeployableImage::onMount(%this, %obj, %slot)
	Line 213: function TurretDeployableImage::onUnmount(%this, %obj, %slot)
	Line 220: function TurretDeployableImage::onFire(%this, %obj, %slot)
	Line 242: function ShapeBase::throwTurret( %this, %data )
	Line 259: function DeployedTurret::onThrow(%data, %user)
\scripts\server\weapons\grenade.cs (1 hit)
	Line 324: function GrenadeWeaponImage::onFire(%data, %obj, %slot)
\scripts\server\weapons\lurker.cs (1 hit)
	Line 247: function LurkerProjectile::onCollision(%this,%obj,%col,%fade,%pos,%normal)
\scripts\server\weapons\proximityMine.cs (10 hits)
	Line 248: function ProximityMineData::create( %data )
	Line 264: function ProximityMineData::onTriggered( %this, %obj, %target )
	Line 269: function ProximityMineData::onExplode( %data, %mine, %position )
	Line 282: function ProximityMineData::damage( %this, %obj, %position, %source, %amount, %damageType )
	Line 292: function ProxMine::onUse(%data, %obj)
	Line 297: function ProxMine::onPickup(%this, %obj, %shape, %amount)
	Line 302: function ProxMine::onInventory( %data, %obj, %amount )
	Line 312: function ProxMine::incCatagory(%data, %obj)
	Line 319: function ProxMine::decCatagory(%data, %obj)
	Line 326: function ProxMineImage::onFire( %data, %obj, %slot )
\scripts\server\weapons\ryder.cs (1 hit)
	Line 161: function RyderProjectile::onCollision(%this,%obj,%col,%fade,%pos,%normal)
\scripts\server\weapons\shotgun.cs (2 hits)
	Line 384: function ShotgunWeaponImage::onFire(%data, %obj, %slot)
	Line 447: function ShotgunIronSightImage::onFire(%data, %obj, %slot)
	
	
